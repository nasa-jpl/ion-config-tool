This build area supports generation of the command dictionary documents.  There are 
two html documents generated and stored into the /docs subdirectory:

   dict.html  - full current dictionary of ion commands
   delta.html - ion command changes from prior version

The 'dict.html' is the main dictionary doc, describing all of the ION configuration
files and commands supported by the current release.  The dictionary is generated 
from the JSON files used by the IonConfig tools. These JSON files declaratively 
specify the ION config file types, commands, parameters and versions.  

The 'delta.html' is a supplementary dictionary doc, providing a delta report with
respect to the immediately preceding ION version. It describes each new command plus 
each obsolete command replaced or dropped in the current release.

View each html doc by simply loading the file into any standard web browser.

The command definition JSON files are listed below.

  cmdTypes.json
  cmdMsgs.json
  configTypes.json
  ionVersions.json
  paramTypes.json
  patterns.json
  selections.json

The build scripts and procedures are described in the GUIDE file.  An important added benefit
of these scripts is detection of some errors and inconsistencies in the JSON definitions.
For this reason, the procedures are partially manual so that errors can be caught and corrected
before concluding the builds of the dictionary docs.

The scripts also depend on the release.json object defined at the root directory.  See the root
directory for a description of the release object.

A key feature of the dictionary build scripts is is the release.json file.  Example:

"release" : {
   "seqNum": 13,
   "ionVersion": "4.1.0",
   "ionConfigVersion": "4.6.1",
   "desc": "IonConfig Tools Release 4.6.1"
}

ionConfigVersion: the release version of the IonConfig tools.  There will normally be at
   least one release of the tools per release of ION, though there can be more for bug fixes
   or new features.  A dictionary is built per IonConfig tool release, since the dictionary
   could also have bug fixes unrelated to changes to ION.

ionVersion: the release version of ION via SourceForge.

seqNum: The IonConfig tools use a simple integer to correspond to the ION version. This makes
    it easier to map a specific command type to ION versions.  The IonConfig tools can support
    a network with nodes having differing ION versions, keeping track of which command types
    are supported by which ION version.  This internal command mapping by seqNum also enables 
    the version command delta analysis.
