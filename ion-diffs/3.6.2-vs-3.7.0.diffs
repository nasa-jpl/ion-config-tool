3.6.2 vs. 3.7.0
----amsrc diffs----
----amsxml diffs----
----ipnrc diffs----
----ascrc diffs----
----bprc diffs----
----dtn2rc diffs----
----imcrc diffs----
----lgfile diffs----
----bssprc diffs----
----cfdprc diffs----
----dtpcrc diffs----
----ionrc diffs----
88a89,101
> =item B<^> I<region_number>
> 
> The B<region> command.  This is used to identify the region to which
> all ensuing "add contact" operations (until this execution of ionadmin
> terminates, or until the next B<region> command is processed) pertain.
> A B<region> is an arbitarily managed set of nodes that customarily are able
> to use contact graph routing to compute forwarding routes among themselves,
> and which consequently share a common contact plan.  As such, there is a
> one-to-one correspondence between regions and contact plans, so in
> effect the B<region> command is used to switch between contact plans.
> Regions are notionally quite small sets (on the order of 16-32 nodes)
> because contact graph routing is computationally intensive.
> 
100a114,158
> The period of time between the start and stop times of a contact is termed
> the contact's "interval".  The intervals of scheduled contacts are not
> allowed to overlap.
> 
> Three different types of contact can be intermixed within an .ionrc file that
> defines a contact plan.
> 
> =over 4
> 
> =item 1  Registration
> 
> When I<start_time> is "-1", the contact signifies the "registration" of a
> node in the region corresponding to the contact plan of which this contact is
> a part.  In this case, I<source_node> and I<dest_node> must be identical and
> non-zero.  A registration contact simply affirms the source node's permanent
> membership in this region, persisting even during periods when the node
> is able neither to send nor to receive data.  When inserted into the
> contact plan, the contact's start and stop times are both automatically
> set to the maximum POSIX time, its data rate is set to zero, and its
> confidence value is set to 1.0.
> 
> =item 2  Hypothetical
> 
> When I<stop_time> is "0", the contact is "hypothetical".  A hypothetical
> contact is an anticipated opportunity for the local node to transmit data,
> or received data from, some potentially neighboring node in the same
> region.  The nature of that contact is completely unknown; if and when
> the contact occurs, the hypothetical contact will be transformed into
> a "discovered" contact for the duration of the opportunity, after which
> it will revert to being hypothetical.  I<source_node> and I<dest_node> must
> B<NOT> be identical, and one or the other must identify the local node.  When
> inserted into the contact plan, the contact's start time is automatically
> set to zero, its stop time is set to the maximum POSIX time, its data rate
> is set to zero, and its confidence value is set to 0.0.
> 
> =item 3  Scheduled
> 
> Otherwise, the contact is "scheduled".  A scheduled contact is a managed
> opportunity to transmit data between nodes, as inferred (for example)
> from a spacecraft or ground station operating plan.  I<start_time> must
> be less than I<stop_time> and I<data_rate> and I<confidence> must both
> be greater than zero.
> 
> =back
> 
112c170,171
< use '*' as I<start_time>.
---
> use '*' as I<start_time>.  To delete a registration contact, use "-1"
> as I<start_time>.  To delete a hypothetical contact, use "0" as I<start_time>.
116c175
< This command will print information (the stop time and data rate) about
---
> This command will print information (stop time, data rate, confidence) about
170,171c229,231
< between correct UTC time and the time values reported by the clock for the
< local ION node's computer.  This delta is automatically applied to locally
---
> between correct UTC time and the localtime equivalent of the current calendar
> (i.e., Unix epoch) time as reported by the clock for the local ION node's
> computer.  This delta is automatically applied to locally
173,174c233,234
< machines that use UTC natively and are synchronized by NTP, the value
< of this delta should be 0, the default.
---
> machines that are synchronized by NTP, the value of this delta should be 0,
> the default.
181,185c241,245
< reported out by the operating system - might differ significantly from the
< actual value of UTC as reported by authoritative clocks on Earth.  To
< compensate for this difference without correcting the clock itself (which
< can be difficult and dangerous), ION simply adds the UTC delta to the
< UTC reported by the operating system.
---
> reported out by the operating system and converted to UTC - might
> differ significantly from the actual value of UTC as reported by authoritative
> clocks on Earth.  To compensate for this difference without correcting the
> clock itself (which can be difficult and dangerous), ION simply adds the UTC
> delta to the calendar time reported by the operating system.
215,219c275,279
< over which congestion forecasts are computed.  For nodes that function only
< as routers this variable will normally be zero.  A value of -1, which is the
< default, indicates that the rate of local data production is unknown; in that
< case local data production is not considered in the computation of congestion
< forecasts.
---
> over which congestion forecasts are computed, in bytes per second.  For
> nodes that function only as routers this variable will normally be zero.  A
> value of -1, which is the default, indicates that the rate of local data
> production is unknown; in that case local data production is not considered
> in the computation of congestion forecasts.
225,229c285,289
< over which congestion forecasts are computed.  For nodes that function only
< as routers this variable will normally be zero.  A value of -1, which is the
< default, indicates that the rate of local data consumption is unknown; in
< that case local data consumption is not considered in the computation of
< congestion forecasts.
---
> over which congestion forecasts are computed, in bytes per second.  For
> nodes that function only as routers this variable will normally be zero.  A
> value of -1, which is the default, indicates that the rate of local data
> consumption is unknown; in that case local data consumption is not considered
> in the computation of congestion forecasts.
282a343,368
> =item B<m home> I<home_region_number>
> 
> This management command asserts that the node's home region is the region
> that is identified by I<home_region_number>.  If no home region is asserted,
> home region number defaults to zero, the "root region".
> 
> =item B<m outer> I<outer_region_number>
> 
> This management command asserts that the node's outer region is the region
> that is identified by I<outer_region_number>.  Outer region number defaults
> to -1, "no region", indicating that the node is a "terminal node".  When a
> node's outer region number is not -1, the node is able to function as a
> "passageway" by which bundles are conveyed between nodes in the home
> region and nodes in the outer region.
> 
> =item B<m passageway> I<node_number> I<home_region_number> I<outer_region_number>
> 
> This management command declares the home and outer region numbers for the
> indicated passageway node.  If the outer region number is -1, then the
> node ceases to be a passageway; if the home region number is -1, then
> the passageway is simply removed.  If neither region number is -1 but
> neither region is one of the regions of which the local node is a member,
> the command has no effect.  Otherwise, the home and outer region numbers
> of the indicated node are recorded.  (This information is needed in order
> to accomplish inter-region routing.)
> 
----ionconfig diffs----
----ionsecrc diffs----
3c3
< ionsecrc - ION security policy management commands file
---
> ionsecrc - ION security database management commands file
7,32c7,11
< ION security policy management commands are passed to B<ionsecadmin> either
< in a file of text lines or interactively at B<ionsecadmin>'s command prompt
< (:).  Commands are interpreted line-by line, with exactly one command per
< line.  The formats and effects of the ION security policy management commands
< are described below.
< 
< A parameter identifed as an I<eid_expr> is an "endpoint ID expression."  For
< all commands, whenever the last character of an endpoint ID expression is
< the wild-card character '*', an applicable endpoint ID "matches" this EID
< expression if all characters of the endpoint ID expression prior to the last
< one are equal to the corresponding characters of that endpoint ID.  Otherwise
< an applicable endpoint ID "matches" the EID expression only when all characters
< of the EID and EID expression are identical.
< 
< ION's security policy management encompasses both BP security and LTP
< authentication.  ION has begun supporting the proposed "streamlined" Bundle
< Security Protocol (Internet Draft draft-birrane-dtn-sbsp-00) in place of
< standard Bundle Security Protocol (RFC 6257).  Since SBSP is not yet a
< published RFC, ION's Bundle Protocol security mechanisms will not necessarily
< interoperate with those of other BP implementations.  This is unfortunate but
< (we hope) temporary, as SBSP represents a major improvement in bundle security.
< It is possible that the SBSP specification will change somewhat between now
< and the time SBSP is published as an RFC, and ION will be revised as necessary
< to conform to those changes, but in the meantime we believe that the advantages
< of SBSP make it more suitable than RFC 6257 as a foundation for the
< development and deployment of secure DTN applications.
---
> ION security database management commands are passed to B<ionsecadmin>
> either in a file of text lines or interactively at B<ionsecadmin>'s command
> prompt (:).  Commands are interpreted line-by line, with exactly one command per
> line.  The formats and effects of the ION security database management
> commands are described below.
60c39
< node has no security policy database and most I<ionsecadmin> commands will fail.
---
> node has no security database and most I<ionsecadmin> commands will fail.
65c44
< security policy database.  The content of I<file_name> is taken as the
---
> security database.  The content of I<file_name> is taken as the
67c46
< security policy database.
---
> security database.
85,336c64
< This command lists all keys in the security policy database.
< 
< =item B<a bspbabrule> I<sender_eid_expr> I<receiver_eid_expr> I<{ '' | ciphersuite_name key_name }>
< 
< The B<add bspbabrule> command.  This command adds a rule specifying the
< manner in which Bundle Authentication Block (BAB) validation will be applied
< to all bundles sent from any node whose endpoints' IDs match
< I<sender_eid_expr> and received at any node whose endpoints' IDs
< match I<receiver_eid_expr>.  Both I<sender_eid_expr> and I<receiver_eid_expr>
< should terminate in wild-card characters, because both the security source
< and security destination of a BAB are actually nodes rather than individual
< endpoints.
< 
< If a zero-length string ('') is indicated instead of a I<ciphersuite_name> then
< BAB validation is disabled for this sender/receiver EID expression pair: all
< bundles sent from nodes with matching administrative endpoint IDs to nodes
< with matching administrative endpoint IDs will be immediately deemed authentic.
< Otherwise, a bundle from a node with matching administrative endpoint ID to a
< node with matching administrative endpoint ID will only be deemed authentic
< if it contains a BAB computed via the ciphersuite named by I<ciphersuite_name>
< using a key value that is identical to the current value of the key named
< I<key_name> in the local security policy database.
< 
< B<NOTE>: if the security policy database contains no BAB rules at all, then
< BAB authentication is disabled; all bundles received from all neighboring
< nodes are considered authentic.  Otherwise, BAB rules B<must> be defined
< for all nodes from which bundles are to be received; all bundles received
< from any node for which no BAB rule is defined are considered inauthentic
< and are discarded.
< 
< =item B<c bspbabrule> I<sender_eid_expr> I<receiver_eid_expr> I<{ '' | ciphersuite_name key_name }>
< 
< The B<change bspbabrule> command.  This command changes the ciphersuite
< name and/or key name for the BAB rule pertaining to the sender/receiver EID
< expression pair identified by I<sender_eid_expr> and I<receiver_eid_expr>.
< Note that the I<eid_expr>s must exactly match those of the rule that is to
< be modified, including any terminating wild-card character.  
< 
< =item B<d bspbabrule> I<sender_eid_expr> I<receiver_eid_expr>
< 
< The B<delete bspbabrule> command.  This command deletes the BAB rule
< pertaining to the sender/receiver EID expression pair identified by
< I<sender_eid_expr> and I<receiver_eid_expr>.  Note that the I<eid_expr>s
< must exactly match those of the rule that is to be deleted, including any
< terminating wild-card character.
< 
< =item B<i bspbabrule> I<sender_eid_expr> I<receiver_eid_expr>
< 
< This command will print information (the ciphersuite and key names) about the
< BAB rule pertaining to I<sender_eid_expr> and I<receiver_eid_expr>.
< 
< =item B<l bspbabrule>
< 
< This command lists all BAB rules in the security policy database.
< 
< =item B<a bspbibrule> I<source_eid_expr> I<destination_eid_expr> I<block_type_number> I<{ '' | ciphersuite_name key_name }>
< 
< The B<add bspbibrule> command.  This command adds a rule specifying the
< manner in which Block Integrity Block (BIB) validation will be applied
< to blocks of type I<block_type_number> for all bundles sourced at any node
< whose administrative endpoint ID matches I<source_eid_expr> and destined for
< any node whose administrative endpoint ID ID matches I<destination_eid_expr>.
< 
< If a zero-length string ('') is indicated instead of a I<ciphersuite_name>
< then BIB validation is disabled for this source/destination EID expression
< pair: blocks of the type indicated by I<block_type_number> in all
< bundles sourced at nodes with matching administrative endpoint IDs and
< destined for nodes with matching administrative endpoint IDs will be
< immediately deemed valid.  Otherwise, a block of the indicated type that
< is attached to a bundle sourced at a node with matching administrative
< endpoint ID and destined for a node with matching administrative endpoint
< ID will only be deemed valid if the bundle contains a corresponding BIB
< computed via the ciphersuite named by I<ciphersuite_name> using a key
< value that is identical to the current value of the key named I<key_name>
< in the local security policy database.
< 
< =item B<c bspbibrule> I<source_eid_expr> I<destination_eid_expr> I<block_type_number> I<{ '' | ciphersuite_name key_name }>
< 
< The B<change bspbibrule> command.  This command changes the ciphersuite
< name and/or key name for the BIB rule pertaining to the source/destination EID
< expression pair identified by I<source_eid_expr> and I<destination_eid_expr>
< and the block identified by I<block_type_number>.
< Note that the I<eid_expr>s must exactly match those of the rule that is to
< be modified, including any terminating wild-card character.  
< 
< =item B<d bspbibrule> I<source_eid_expr> I<destination_eid_expr> I<block_type_number>
< 
< The B<delete bspbibrule> command.  This command deletes the BIB rule
< pertaining to the source/destination EID expression pair identified by
< I<sender_eid_expr> and I<receiver_eid_expr> and the block identified by
< I<block_type_number>.  Note that the I<eid_expr>s
< must exactly match those of the rule that is to be deleted, including any
< terminating wild-card character.
< 
< =item B<i bspbibrule> I<source_eid_expr> I<destination_eid_expr> I<block_type_number>
< 
< This command will print information (the ciphersuite and key names) about the
< BIB rule pertaining to I<source_eid_expr>, I<destination_eid_expr>, and
< I<block_type_number>.
< 
< =item B<l bspbibrule>
< 
< This command lists all BIB rules in the security policy database.
< 
< =item B<a bspbcbrule> I<source_eid_expr> I<destination_eid_expr> I<block_type_number> I<{ '' | ciphersuite_name key_name }>
< 
< The B<add bspbcbrule> command.  This command adds a rule specifying the
< manner in which Block Confidentiality Block (BCB) encryption will be applied
< to blocks of type I<block_type_number> for all bundles sourced at any node
< whose administrative endpoint ID matches I<source_eid_expr> and destined for
< any node whose administrative endpoint ID ID matches I<destination_eid_expr>.
< 
< If a zero-length string ('') is indicated instead of a I<ciphersuite_name>
< then BCB encryption is disabled for this source/destination EID expression
< pair: blocks of the type indicated by I<block_type_number> in all
< bundles sourced at nodes with matching administrative endpoint IDs and
< destined for nodes with matching administrative endpoint IDs will be
< sent in plain text.  Otherwise, a block of the indicated type that
< is attached to a bundle sourced at a node with matching administrative
< endpoint ID and destined for a node with matching administrative endpoint
< ID can only be deemed decrypted if the bundle contains a corresponding BCB
< computed via the ciphersuite named by I<ciphersuite_name> using a key
< value that is identical to the current value of the key named I<key_name>
< in the local security policy database.
< 
< =item B<c bspbcbrule> I<source_eid_expr> I<destination_eid_expr> I<block_type_number> I<{ '' | ciphersuite_name key_name }>
< 
< The B<change bspbcbrule> command.  This command changes the ciphersuite
< name and/or key name for the BCB rule pertaining to the source/destination EID
< expression pair identified by I<source_eid_expr> and I<destination_eid_expr>
< and the block identified by I<block_type_number>.
< Note that the I<eid_expr>s must exactly match those of the rule that is to
< be modified, including any terminating wild-card character.  
< 
< =item B<d bspbcbrule> I<source_eid_expr> I<destination_eid_expr> I<block_type_number>
< 
< The B<delete bspbcbrule> command.  This command deletes the BCB rule
< pertaining to the source/destination EID expression pair identified by
< I<sender_eid_expr> and I<receiver_eid_expr> and the block identified by
< I<block_type_number>.  Note that the I<eid_expr>s
< must exactly match those of the rule that is to be deleted, including any
< terminating wild-card character.
< 
< =item B<i bspbcbrule> I<source_eid_expr> I<destination_eid_expr> I<block_type_number>
< 
< This command will print information (the ciphersuite and key names) about the
< BCB rule pertaining to I<source_eid_expr>, I<destination_eid_expr>, and
< I<block_type_number>.
< 
< =item B<l bspbcbrule>
< 
< This command lists all BCB rules in the security policy database.
< 
< =item B<a ltprecvauthrule> I<ltp_engine_id> I<ciphersuite_nbr> I<[key_name]>
< 
< The B<add ltprecvauthrule> command.  This command adds a rule specifying the
< manner in which LTP segment authentication will be applied to LTP segments
< received from the indicated LTP engine.
< 
< A segment from the indicated LTP engine will only be deemed authentic if it
< contains an authentication extension computed via the ciphersuite identified
< by I<ciphersuite_nbr> using the applicable key value.  If I<ciphersuite_nbr>
< is 255 then the applicable key value is a hard-coded constant and I<key_name>
< must be omitted; otherwise I<key_name> is required and the applicable key
< value is the current value of the key named I<key_name> in the local security
< policy database.
< 
< Valid values of I<ciphersuite_nbr> are:
< 
< =over 4
< 
< 0: HMAC-SHA1-80
< 1: RSA-SHA256
< 255: NULL
< 
< =back
< 
< =item B<c ltprecvauthrule> I<ltp_engine_id> I<ciphersuite_nbr> I<[key_name]>
< 
< The B<change ltprecvauthrule> command.  This command changes the parameters
< of the LTP segment authentication rule for the indicated LTP engine. 
< 
< =item B<d ltprecvauthrule> I<ltp_engine_id>
< 
< The B<delete ltprecvauthrule> command.  This command deletes the LTP segment
< authentication rule for the indicated LTP engine.
< 
< =item B<i ltprecvauthrule> I<ltp_engine_id>
< 
< This command will print information (the LTP engine id, ciphersuite
< number, and key name) about the LTP segment authentication rule for the
< indicated LTP engine.
< 
< =item B<l ltprecvauthrule>
< 
< This command lists all LTP segment authentication rules in the security policy
< database.
< 
< =item B<a ltpxmitauthrule> I<ltp_engine_id> I<ciphersuite_nbr> I<[key_name]>
< 
< The B<add ltpxmitauthrule> command.  This command adds a rule specifying the
< manner in which LTP segments transmitted to the indicated LTP engine must be
< signed.
< 
< Signing a segment destined for the indicated LTP engine entails computing an
< authentication extension via the ciphersuite identified by I<ciphersuite_nbr>
< using the applicable key value.  If I<ciphersuite_nbr> is 255 then the
< applicable key value is a hard-coded constant and I<key_name> must be
< omitted; otherwise I<key_name> is required and the applicable key
< value is the current value of the key named I<key_name> in the local security
< policy database.
< 
< Valid values of I<ciphersuite_nbr> are:
< 
< =over 4
< 
< 0: HMAC_SHA1-80
< 1: RSA_SHA256
< 255: NULL
< 
< =back
< 
< =item B<c ltpxmitauthrule> I<ltp_engine_id> I<ciphersuite_nbr> I<[key_name]>
< 
< The B<change ltpxmitauthrule> command.  This command changes the parameters
< of the LTP segment signing rule for the indicated LTP engine. 
< 
< =item B<d ltpxmitauthrule> I<ltp_engine_id>
< 
< The B<delete ltpxmitauthrule> command.  This command deletes the LTP segment
< signing rule for the indicated LTP engine.
< 
< =item B<i ltpxmitauthrule> I<ltp_engine_id>
< 
< This command will print information (the LTP engine id, ciphersuite
< number, and key name) about the LTP segment signing rule for the indicated
< LTP engine.
< 
< =item B<l ltpxmitauthrule>
< 
< This command lists all LTP segment signing rules in the security policy
< database.
< 
< =item B<x> I<[ { ~ | sender_eid_expr } [ { ~ | receiver_eid_expr} [ { ~ | bab | pib | pcb | esb } ] ] ]>
< 
< This command will clear all rules for the indicated type of bundle security
< block between the indicated security source and security destination.  If
< block type is omitted it defaults to B<~> signifying "all BSP blocks".  If
< both block type and security destination are omitted, security destination
< defaults to B<~> signifying "all BSP security destinations".  If all three
< command-line parameters are omitted, then security source defaults to B<~>
< signifying "all BSP security sources".
---
> This command lists all keys in the security database.
354,366d81
< =item a bspbabrule ipn:19.* ipn:11.* HMAC_SHA1 BABKEY
< 
< Adds a BAB rule requiring that all bundles sent from node number 19 to node
< number 11 contain Bundle Authentication Blocks computed via the HMAC_SHA1
< ciphersuite using a key value that is identical to the current value of the
< key named "BABKEY" in the local security policy database.
< 
< =item c bspbabrule ipn:19.* ipn:11.* ''
< 
< Changes the BAB rule pertaining to all bundles sent from node number 19 to
< node number 11.  BAB checking is disabled; these bundles will be automatically
< deemed authentic.
< 
----ltprc diffs----
