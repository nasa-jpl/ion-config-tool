4.0.0 vs. 4.1.0
----amsrc diffs----
129c129
< Identifies the local continuum.
---
> Identifies the remote continuum.
133c133
< Identifies the local continuum.
---
> Identifies the remote continuum.
163c163
< reachable.  The endpoint specification must conform the endpoint
---
> reachable.  The endpoint specification must conform to the endpoint
200,201c200,201
< must conform the endpoint specification syntax defined for the named transport
< service; see the AMS Blue Book for details.
---
> must conform to the endpoint specification syntax defined for the named
> transport service; see the AMS Blue Book for details.
444c444
< Identifies the venture.
---
> Identifies the unit.
448c448
< Identifies the venture.
---
> Identifies the unit.
----amsxml diffs----
----bpv6 ascrc diffs----
94a95,100
> =item B<t> <acsBundleLifetime>
> 
> This command sets the lifetime that will be asserted for every ACS bundle
> subsequently issued by the local bundle agent.  The new I<acsBundleLifetime>
> is stored in SDR.
> 
----bpv6 bprc diffs----
----bpv6 bpsecrc diffs----
----bpv6 dtn2rc diffs----
----bpv6 imcrc diffs----
----bpv6 ipnrc diffs----
----bpv6 lgfile diffs----
----bpv6 biberc diffs----
20a21,78
> NOTE: in order to cause bundles to be transmitted via BIBE:
> 
> =over 4
> 
> =item B<Plan>
> 
> Remember that BIBE is a convergence-layer protocol; as such, it operates
> between two nodes that are topologically adjacent in a BP network (but in
> this case the BP network within which the nodes are topologically adjacent
> is an overlay on top of the real BP network).  Since the sending and
> receiving nodes are topologically adjacent they are neighbors: the sending
> node MUST have an egress plan for transmission to the receiving (that is,
> B<peer>) node, and there MUST be a BIBE outduct attached to that plan.
> 
> =item B<Routing>
> 
> In order to compel bundles bound for some destination node to be forwarded
> via the BIBE peer node rather than over some other route computed by CGR,
> you have to override CGR routing for that bundle.  The way to do this is
> to (a) tag the bundle with flow label X (in ancillary data) and (b) use
> ipnadmin to establish at the sending node a I<routing override> that
> coerces all bundles with flow label X to be sent directly to the peer node.
> 
> If the peer node happens to be a true BP neighbor as well - that is,
> there is also a non-BIBE outduct attached to the egress plan for
> transmission to that node - then you additionally need to tell the
> egress plan management daemon (bpclm) for that node which bundles
> need to be forwarded using the BIBE outduct rather than the non-BIBE
> outduct.  The way to do this is to use ipnadmin to establish at the
> sending node a I<class-of-service override> that locally and temporarily
> OR's the BP_BIBE_REQUESTED flag (32) to the quality-of-service flags
> of any bundle tagged with flow label X.
> 
> =item B<Quality of Service>
> 
> If you want custody transfer to be invoked for each BIBE transmission of a
> bundle from the sending node to the peer node, you must additionally
> use ipnadmin to establish at the sending node a I<class-of-service override>
> that locally and temporarily OR's the BP_CT_REQUESTED flag (64) to the
> quality-of-service flags of any bundle tagged with flow label X.
> 
> If you need to establish a class-of-service override to set the
> BP_BIBE_REQUESTED flag (as described above) as well, then use the
> OR of BP_BIBE_REQUESTED and BP_CT_REQUESTED - that is, 96 - as the
> quality-of-service flags argument for that override.
> 
> B<NOTE> that an alternative method of setting both the BP_BIBE_REQUESTED
> and BP_CT_REQUESTED flags for a given bundle is simply to request custody
> transfer when the bundle is sourced; this will OR that bundle's own
> quality-of-service flags (in ancillary data) with 96.  But be careful:
> in this case the bundle will be permanently tagged with these flag values,
> meaning that it will be forwarded via BIBE with custody transfer over
> every "hop" of the end-to-end path to its destination, and if BIBE is
> unavailable at any forwarding node on the path then the bundle can
> never reach the destination node.
> 
> =back
> 
----bpv7 bprc diffs----
218c218
< =item B<a protocol> I<protocol_name> I<payload_bytes_per_frame> I<overhead_bytes_per_frame> [I<protocol_class>]
---
> =item B<a protocol> I<protocol_name> [I<protocol_class>]
221,224c221
< convergence layer protocol at the local node.  The I<payload_bytes_per_frame>
< and I<overhead_bytes_per_frame> arguments are used in calculating the
< estimated transmission capacity consumption of each bundle, to aid in
< route computation and congestion forecasting.
---
> convergence layer protocol at the local node.
235a233,238
> In earlier versions of ION this command took two additional arguments,
> I<payload_bytes_per_frame> and I<overhead_bytes_per_frame>.  These arguments
> are deprecated.  BP configuration files that include B<a protocol> commands
> in the old format will be processed correctly; the deprecated arguments
> will simply be ignored.
> 
407c410
< The B<delete plan> command.  This command deletes the outduct identified
---
> The B<delete plan> command.  This command deletes the plan identified
----bpv7 bpsecrc diffs----
10,11c10,11
< line.  The formats and effects of the BP security policy management commands
< are described below.
---
> line.  JSON commands may span multiple lines. The formats and effects of the 
> BP security policy management commands are described below.
159a160,249
> =item B<a> I<{ B<event_set> : { B<name> : event set name, 
> B<desc> : (opt) description } }>
> 
> The B<add event_set> command. This command will add a named security operation
> event set to the system.
> 
> =item B<i> I<{ B<event_set> : { B<name> : event set name } }>
> 
> The B<info event_set> command for event sets displays the information the system maintains 
> for a named event set. The security operation events and configured, optional 
> processing actions associated with the event set are shown.
> 
> =item B<d> I<{ B<event_set> : { B<name> : event set name } }>
> 
> The B<delete event_set> command deletes a named event set from the system. 
> A named event set cannot be deleted if it is referenced by a security policy 
> rule. All security policy rules associated with the named event set must be deleted 
> before the event set itself may be deleted.
> 
> =item B<l> I<{B<type> : B<event_set>}>
> 
> The B<list event_set> command lists the names of all event sets defined in the 
> system.
> 
> =item B<a> I<{ B<event> : { >
> 	I<B<es_ref> : event set name,>
> 	I<B<event_id> : security operation event ID>
> 	I<B<actions> : [ opt. processing action, ... , opt. processing action ],>
> 	I<B<action_parms> : [ { B<id>: parm ID, B<value>: parm value }, ... , { B<id>: parm ID, B<value>: parm value } ] } }>
> 
> The B<add event> command adds security operation event and associated optional 
> processing action(s) to an event set. Multiple processing actions can be specified 
> for a single security operation event.
> 
> =item B<d> I< { B<event> : { >
>         I<B<es_ref> : event set name,>
> 	I<B<event_id> : security operation event ID>
> 	I<B<actions> : [ opt. processing action, ... , opt. processing action ] } }>
> 
> The B<delete event> command is used to delete optional processing actions from a
> named event set. To remove specific processing actions, include both the security 
> operation event and optional processing actions to be removed in the command. 
> To remove all processing actions for a security operation event, exclude the 
> optional processing action field. 
> 
> =item 	B<a> I<{ B<policyrule> : {>
> 	I<B<desc> : description,>
> 	I<B<filter> :>
> 	I<{>
> 	I<B<rule_id> : Security policy rule id,
> 	B<role> : Security policy role,
> 	B<src> : Bundle source,
> 	B<dest> : Bundle destination
> 	B<sec_src> : Security source
> 	B<tgt> : Security target block type,
> 	B<scid> : Security context ID, },>
> 	I<B<spec> : {
> 	B<svc> : Security service,
> 	B<scid> : Security context ID,
> 	B<sc_parms> : [ { B<id>: SC parm ID, B<value>: SC parm value }, 
> 	... , { B<id>: SC parm ID, B<value>: SC parm value } ] },
> 	B<es_ref> : Event set name } } >
> 	
> The B<add policyrule> command adds a policy rule to the system, describing a 
> required security operation and the security policy role of the BPA applying 
> the policy statement. The above command adds a policy rule referencing a 
> named event set to the system.
> 	
> =item B<d> I<{ B<policyrule> : { B<rule_id> : Security policy rule ID } }>
> 
> The B<delete policyrule> command deletes the policy rule identified by its
> rule ID.
> 
> =item B<i> I<{B<policyrule> : Security policy rule id }>
> 	
> The B<info policyrule> command displays the information for the
> policy rule matching the provided ID.
> 
> =item B<f> I<{B<policyrule> : { B<type> : B<all | best>, B<src> : Bundle source,
> 	B<dest> : Bundle destination, B<ssrc> : Security source, B<scid> : Security context ID, B<role> : Security policy role } }>
> 	
> The B<find policyrule> command finds all policy rules matching the provided criteria 
> when type B<all> is selected, and finds the single policy rule that is determined to be 
> the best match when type B<best> is selected. 
> 
> =item B<l> I<{B<type> : B<policyrule>}>
> 
> The B<list policyrule> command lists all policy rules currently 
> defined in the system.
> 
----bpv7 dtn2rc diffs----
12,13c12,13
< for forwarding bundles to "dtn"-scheme destination endpoints, identified by
< node ID.  (Each node ID is simply a BP endpoint ID.)
---
> for forwarding bundles to nodes identified by "dtn"-scheme destination
> endpoints.
41,42c41,42
< The node IDs cited in dtn2rc plans may be "wild-carded".  That is, when
< the last character of a node ID is either '*' or '~' (these two wild-card
---
> The node names cited in dtn2rc plans may be "wild-carded".  That is, when the
> last character of a plan's node name is either '*' or '~' (these two wild-card
44,49c44,49
< whose IDs are identical to the wild-carded node name up to the wild-card
< character.  For example, a bundle whose destination EID name is "dtn://foghorn"
< would be routed by plans citing the following node IDs: "dtn://foghorn",
< "dtn://fogh*", "dtn://fog~", "//*".  When multiple plans are all applicable
< to the same destination EID, the one citing the longest (i.e., most narrowly
< targeted) node ID will be applied.
---
> whose names are identical to the wild-carded node name up to the wild-card
> character.  For example, a bundle whose destination EID is "dtn://foghorn/x"
> would be routed by plans citing the following node names: "foghorn",
> "fogh*", "fog~", "*".  When multiple plans are all applicable to the
> same destination EID, the one citing the longest (i.e., most narrowly
> targeted) node name will be applied.
88c88
< =item B<a plan> I<node_ID> I<directive> [I<nominal_xmit_rate>]
---
> =item B<a plan> I<node_name> I<directive> [I<nominal_xmit_rate>]
91c91
< the bundles destined for the node(s) identified by I<node_ID>.  The
---
> the bundles destined for the node(s) identified by I<node_nameID>.  The
97c97
< B<Note that the plan commands consumed by dtn2admin are a simplified
---
> B<Note> that the plan commands consumed by dtn2admin are a simplified
100c100
< and more powerful bpadmin commands.>
---
> and more powerful bpadmin commands.
102c102
< =item B<c plan> I<node_ID> [I<directive>] [I<nominal_xmit_rate>]
---
> =item B<c plan> I<node_nameID> [f I<endpoint_ID>] [I<nominal_xmit_rate>]
104c104
< The B<change plan> command.  This command revises the I<directive> and/or
---
> The B<change plan> command.  This command revises the "via node" and/or
106c106,107
< I<node_ID>.
---
> I<node_nameID>.  To detach an outduct from the plan, use the "planduct"
> deletion command processed by bpadmin.
108c109
< =item B<d plan> I<node_ID>
---
> =item B<d plan> I<node_nameID>
111c112
< the node(s) identified by I<node_ID>.
---
> the node(s) identified by I<node_nameID>.
113c114
< =item B<i plan> I<node_ID>
---
> =item B<i plan> I<node_nameID>
116c117
< identified by I<node_ID>.
---
> identified by I<node_nameID>.
129c130
< =item a plan dtn://bbn2 f ipn:8.41
---
> =item a plan bbn2 f ipn:8.41
131,132c132,133
< Declares a static route from the local node to node "//bbn2".  Any bundle
< destined for any endpoint whose node name is "//bbn2" will be forwarded
---
> Declares a static route from the local node to node "bbn2".  Any bundle
> destined for any endpoint whose node name is "bbn2" will be forwarded
135c136
< =item a plan dtn://mitre1* x ltp/6
---
> =item a plan mitre* x ltp/6
137,139c138,140
< Declares a static route from the local node to node "//mitre1".  Any bundle
< destined for any endpoint whose node ID begins with "mitre1" will
< be queued for transmission on LTP outduct 6.
---
> Declares a static route from the local node to any node whose node name
> begins with "mitre".  Any bundle destined for any endpoint whose node
> name begins with "mitre1" will be queued for transmission on LTP outduct 6.
----bpv7 ipnrc diffs----
47a48,64
> Routing and class-of-service overrides may also be managed:
> 
> =over 4
> 
> A routing override declares a neighboring node to which all bundles must
> be forwarded that meet specified criteria.  This override is strictly local,
> affecting only forwarding from the local node, and it is applied before
> any route computed by CGR or IRR is considered.
> 
> A class-of-service override declares the class of service (priority and
> ordinal and [optionally] quality-of-service flags) that will condition
> - in terms of order and outduct selection - the forwarding of all bundles
> that meet specified criteria.  Again this override is strictly local,
> affecting only forwarding from the local node.
> 
> =back
> 
172c189
< =item B<a cosovrd> I<data_label> I<dest_node_nbr> I<source_node_nbr> I<priority> I<ordinal>
---
> =item B<a cosovrd> I<data_label> I<dest_node_nbr> I<source_node_nbr> I<priority> I<ordinal> [I<qos_flags>]
178c195
< ordinal) changed as noted.
---
> ordinal and, optionally, additional quality-of-service flags) changed as noted.
180c197
< =item B<c cosovrd> I<data_label> I<dest_node_nbr> I<source_node_nbr> I<priority> I<ordinal>
---
> =item B<c cosovrd> I<data_label> I<dest_node_nbr> I<source_node_nbr> I<priority> I<ordinal> [I<qos_flags>]
182,185c199,202
< The B<change cosovrd> command.  This command changes the override priority
< and ordinal for the override identified by I<data_label>, I<dest_node_nbr>,
< and I<source_node_nbr>.  To cause ION to forget the override, use -1 as
< I<priority>.
---
> The B<change cosovrd> command.  This command changes the effective class of
> service (priority and ordinal and, optionally, additional quality-of-service
> flags) for the override identified by I<data_label>, I<dest_node_nbr>, and
> I<source_node_nbr>.  To cause ION to forget the override, use -1 as I<priority>.
----bpv7 lgfile diffs----
----bssprc diffs----
77,78c77,78
< between reception of a segment at this node and transmission of an
< acknowledging segment, due to processing delay in the node.  (See the
---
> between reception of a block at this node and transmission of an
> acknowledging PDU, due to processing delay in the node.  (See the
90a91,96
> =item B<a seat> 'I<BE-BSO_command>' 'I<RL-BSO_command>'
> 
> The B<add seat> command.  This command declares that the local BSSP engine
> can receive BSSP PDUs via the link service input daemons that begin
> running when 'I<BE-BSO_command>' and 'I<RL-BSO_command>' are executed.
> 
99,101c105,111
< by I<peer_engine_nbr>.  The command will fail if any outbound segments
< for this span are pending transmission or any inbound blocks from the
< peer engine are incomplete.
---
> by I<peer_engine_nbr>.  The command will fail if any outbound blocks
> for this span are pending transmission.
> 
> =item B<d seat> 'I<BE-BSO_command>' 'I<RL-BSO_command>'
> 
> The B<delete span> command.  This command deletes the seat identified
> by 'I<BE-BSO_command>' and 'I<RL-BSO_command>'.
107a118,122
> =item B<i seat> 'I<BE-BSO_command>' 'I<RL-BSO_command>'
> 
> This command will print all information (i.e., process ID numbers)
> about the seat identified by 'I<BE-BSO_command>' and 'I<RL-BSO_command>'.
> 
112c127,131
< =item B<s> 'I<BE-BSI_command>' 'I<RL-BSI_command>'
---
> =item B<l seat>
> 
> This command lists all declared BSSP data acquisition seats.
> 
> =item B<s> ['I<BE-BSI_command>' 'I<RL-BSI_command>']
117c136,140
< tasks for the local engine.
---
> tasks for the local engine.  'I<BE-BSI_command>' and 'I<RL-BSI_command>'
> are deprecated but are supported for backward compatibility; if provided,
> the effect is the same as entering the command 
> "a seat 'I<BE-BSO_command>' 'I<RL-BSO_command>'" prior to starting all
> daemon tasks.
----cfdprc diffs----
----dtpcrc diffs----
----ionconfig diffs----
----ionrc diffs----
91,92c91,92
< The B<region> command.  This is used to identify the region to which
< all ensuing "add contact" operations (until this execution of ionadmin
---
> The B<region> command.  This is used to select the region to which
> all ensuing "contact" operations (until this execution of ionadmin
101a102,112
> Information regarding up to two (2) regions may be managed at any single node.
> 
> By default, region number 1 (the "universal" region) is selected.
> 
> =item B<!> [0 | 1]
> 
> "Announce" control.  Setting the announce flag to 1 causes contact plan
> updates (contact add/change/delete, range add/delete) to be multicast to
> all other nodes in the region in addition to being processed at the local
> node.  Setting the announce flag to 0 disables this behavior.
> 
118,119c129,130
< Three different types of contact can be intermixed within an .ionrc file that
< defines a contact plan.
---
> Commands pertaining to three different types of contact can be intermixed
> within an .ionrc file that defines a contact plan.
138,139c149,150
< contact is an anticipated opportunity for the local node to transmit data,
< or received data from, some potentially neighboring node in the same
---
> contact is an anticipated opportunity for the local node to transmit data
> to, or receive data from, some potentially neighboring node in the same
163a175
> Registration and hypothetical contacts cannot be changed.
167,171c179,183
< The B<delete contact> command.  This command deletes the scheduled
< period of data transmission from I<source_node> to I<dest_node> starting
< at I<start_time>.  To delete all contacts between some pair of nodes,
< use '*' as I<start_time>.  To delete a registration contact, use "-1"
< as I<start_time>.  To delete a hypothetical contact, use "0" as I<start_time>.
---
> The B<delete contact> command.  This command deletes the contact from
> I<source_node> to I<dest_node> starting at I<start_time>.  To delete
> all scheduled contacts between some pair of nodes, use '*' as I<start_time>.
> To delete a registration contact, use "-1" as I<start_time>.  To delete
> a hypothetical contact, use "0" as I<start_time>.
181c193,200
< This command lists all scheduled periods of data transmission.
---
> This command lists all contacts in the contact plan for the selected region.
> 
> =item B<b contact>
> 
> The B<brief contacts> command.  This command writes a file of commands
> that will recreate the current list of contacts, for the selected region,
> in the node's ION database.  The name of the file will be
> "contacts.I<region_number>.ionrc".
200,207c219,227
< As a convenience, ION interprets a range command in which the node number of
< the first cited node is numerically less than that of the second cited node
< as implicitly declaring the same distance in the reverse direction B<UNLESS>
< a second range command is present that cites the same two nodes in the opposite
< order, which overrides the implicit declaration.  A range command in which
< the node number of the first cited node is numerically greater than that of
< the second cited node implies B<ABSOLUTELY NOTHING> about the distance in the
< reverse direction.
---
> For this reason, the range identification syntax for this command is
> asymmetrical: ION interprets an B<add range> command in which the node number
> of the first cited node is numerically less than that of the second cited node
> as implicitly declaring the same distance in the reverse direction (the
> normal case)  B<UNLESS> a second range command is present that cites the
> same two nodes in the opposite order, which overrides the implicit
> declaration.  A range command in which the node number of the first
> cited node is numerically greater than that of the second cited node
> implies B<ABSOLUTELY NOTHING> about the distance in the reverse direction.
215a236,245
> B<NOTE> that the range identification syntax for this command is
> asymmetrical, much as described for the B<add range> command described
> above.  ION interprets a B<delete range> command in which the node number of
> the first cited node is numerically less than that of the second cited node
> as implicitly requesting deletion of the range in the opposite direction
> as well.  A B<delete range> command in which the node number of the first
> cited node is numerically greater than that of the second cited node
> deletes only the range in that direction; the asserted range in the
> opposite direction is unaffected.
> 
225a256,261
> =item B<b range>
> 
> The B<brief ranges> command.  This command writes a file of commands that
> will recreate the current list of ranges in the node's ION database.  The
> file's name will be "ranges.ionrc".
> 
----ionsecrc diffs----
----ltprc diffs----
51c51
< =item B<a span> I<peer_engine_nbr> I<max_export_sessions> I<max_import_sessions> I<max_segment_size> I<aggregation_size_limit> I<aggregation_time_limit> 'I<LSO_command>' [I<queuing_latency>]
---
> =item B<a span> I<peer_engine_nbr> I<max_export_sessions> I<max_import_sessions> I<max_segment_size> I<aggregation_size_threshold> I<aggregation_time_limit> 'I<LSO_command>' [I<queuing_latency>]
57c57
< The I<max_segment_size> and I<aggregation_size_limit>
---
> The I<max_segment_size> and I<aggregation_size_threshold>
64c64
< I<aggregation_size_limit> limits the number of LTP service data units
---
> I<aggregation_size_threshold> limits the number of LTP service data units
67c67
< exceeds this limit, aggregation into this block must cease and the block
---
> exceeds this threshold, aggregation into this block must cease and the block
109c109,115
< =item B<c span> I<peer_engine_nbr> I<max_export_sessions> I<max_import_sessions> I<max_segment_size> I<aggregation_size_limit> I<aggregation_time_limit> 'I<LSO_command>' [I<queuing_latency>]
---
> =item B<a seat> 'I<LSI_command>' 
> 
> The B<add seat> command.  This command declares that the local LTP engine
> can receive LTP segments via the link service input daemon that begins
> running when I<'LSI_command'> is executed.
> 
> =item B<c span> I<peer_engine_nbr> I<max_export_sessions> I<max_import_sessions> I<max_segment_size> I<aggregation_size_threshold> I<aggregation_time_limit> 'I<LSO_command>' [I<queuing_latency>]
120a127,131
> =item B<d seat> 'I<LSI_command>'
> 
> The B<delete seat> command.  This command deletes the seat identified
> by 'I<LSI_command>'.  
> 
125a137,141
> =item B<i seat> 'I<LSI_command>'
> 
> This command will print all information (i.e., process ID number) about
> the seat identified by 'I<LSI_command>'.  
> 
130c146,150
< =item B<s> 'I<LSI command>'
---
> =item B<l seat>
> 
> This command lists all declared LTP data acquisition seats.
> 
> =item B<s> ['I<LSI_command>']
132,134c152,156
< The B<start> command.  This command starts link service output tasks for
< all LTP spans (to remote engines) from the local LTP engine, and it starts
< the link service input task for the local engine.
---
> The B<start> command.  This command starts link service input tasks for
> all LTP seats and output tasks for all LTP spans (to remote engines) from
> the local LTP engine.  'I<LSI_command>' is deprecated but is supported for
> backward compatibility; if provided, the effect is the same as entering
> the command "a seat 'I<LSI_command>'" prior to starting all daemon tasks.
260,261c282,283
< limit is 32768 bytes, aggregation time limit is 2 seconds, and the link service
< output task that is initiated when LTP is started on the local ION node
---
> threshold is 32768 bytes, aggregation time limit is 2 seconds, and the link
> service output task that is initiated when LTP is started on the local ION node
----ltpsecrc diffs----
