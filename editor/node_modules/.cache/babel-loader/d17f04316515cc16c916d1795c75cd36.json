{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n'use strict';\n\nvar ReactPropTypes = require('./ReactPropTypes');\n\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\n}\n\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(false) : undefined;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\n}\n\nvar propTypes = {\n  value: function value(props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function checked(props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\nvar loggedTypeFailures = {};\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\n\n\nvar LinkedValueUtils = {\n  checkPropTypes: function checkPropTypes(tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n      }\n\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function getValue(inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n\n      return inputProps.valueLink.value;\n    }\n\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function getChecked(inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n\n      return inputProps.checkedLink.value;\n    }\n\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function executeOnChange(inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\nmodule.exports = LinkedValueUtils;","map":{"version":3,"names":["ReactPropTypes","require","ReactPropTypeLocations","invariant","warning","hasReadOnlyValue","_assertSingleLink","inputProps","checkedLink","valueLink","process","env","NODE_ENV","undefined","_assertValueLink","value","onChange","_assertCheckedLink","checked","propTypes","props","propName","componentName","type","readOnly","disabled","Error","func","loggedTypeFailures","getDeclarationErrorAddendum","owner","name","getName","LinkedValueUtils","checkPropTypes","tagName","hasOwnProperty","error","prop","message","addendum","getValue","getChecked","executeOnChange","event","requestChange","target","call","module","exports"],"sources":["/Users/rlborgen/git/ionconfig/editor/node_modules/react-popout/node_modules/react/lib/LinkedValueUtils.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(false) : undefined;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;"],"mappings":"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"},"metadata":{},"sourceType":"script"}