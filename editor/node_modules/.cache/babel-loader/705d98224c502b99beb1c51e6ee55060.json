{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n'use strict';\n\nvar mouseListenerNames = {\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n};\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\n\nvar ReactDOMButton = {\n  getNativeProps: function getNativeProps(inst, props, context) {\n    if (!props.disabled) {\n      return props;\n    } // Copy the props, except the mouse listeners\n\n\n    var nativeProps = {};\n\n    for (var key in props) {\n      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {\n        nativeProps[key] = props[key];\n      }\n    }\n\n    return nativeProps;\n  }\n};\nmodule.exports = ReactDOMButton;","map":{"version":3,"names":["mouseListenerNames","onClick","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","onClickCapture","onDoubleClickCapture","onMouseDownCapture","onMouseMoveCapture","onMouseUpCapture","ReactDOMButton","getNativeProps","inst","props","context","disabled","nativeProps","key","hasOwnProperty","module","exports"],"sources":["/Users/rlborgen/git/ionconfig/editor/node_modules/react-popout/node_modules/react/lib/ReactDOMButton.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar mouseListenerNames = {\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n};\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = {\n  getNativeProps: function (inst, props, context) {\n    if (!props.disabled) {\n      return props;\n    }\n\n    // Copy the props, except the mouse listeners\n    var nativeProps = {};\n    for (var key in props) {\n      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {\n        nativeProps[key] = props[key];\n      }\n    }\n\n    return nativeProps;\n  }\n};\n\nmodule.exports = ReactDOMButton;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,kBAAkB,GAAG;EACvBC,OAAO,EAAE,IADc;EAEvBC,aAAa,EAAE,IAFQ;EAGvBC,WAAW,EAAE,IAHU;EAIvBC,WAAW,EAAE,IAJU;EAKvBC,SAAS,EAAE,IALY;EAOvBC,cAAc,EAAE,IAPO;EAQvBC,oBAAoB,EAAE,IARC;EASvBC,kBAAkB,EAAE,IATG;EAUvBC,kBAAkB,EAAE,IAVG;EAWvBC,gBAAgB,EAAE;AAXK,CAAzB;AAcA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG;EACnBC,cAAc,EAAE,wBAAUC,IAAV,EAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;IAC9C,IAAI,CAACD,KAAK,CAACE,QAAX,EAAqB;MACnB,OAAOF,KAAP;IACD,CAH6C,CAK9C;;;IACA,IAAIG,WAAW,GAAG,EAAlB;;IACA,KAAK,IAAIC,GAAT,IAAgBJ,KAAhB,EAAuB;MACrB,IAAIA,KAAK,CAACK,cAAN,CAAqBD,GAArB,KAA6B,CAAClB,kBAAkB,CAACkB,GAAD,CAApD,EAA2D;QACzDD,WAAW,CAACC,GAAD,CAAX,GAAmBJ,KAAK,CAACI,GAAD,CAAxB;MACD;IACF;;IAED,OAAOD,WAAP;EACD;AAfkB,CAArB;AAkBAG,MAAM,CAACC,OAAP,GAAiBV,cAAjB"},"metadata":{},"sourceType":"script"}