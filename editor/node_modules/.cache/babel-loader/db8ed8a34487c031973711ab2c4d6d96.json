{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\n\n\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n  registerDefault: function registerDefault() {}\n};\nmodule.exports = EventListener;","map":{"version":3,"names":["emptyFunction","require","EventListener","listen","target","eventType","callback","addEventListener","remove","removeEventListener","attachEvent","detachEvent","capture","process","env","NODE_ENV","console","error","registerDefault","module","exports"],"sources":["/Users/rlborgen/git/ionconfig/editor/node_modules/react-popout/node_modules/react/node_modules/fbjs/lib/EventListener.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function (target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function () {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function () {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function (target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function () {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function () {}\n};\n\nmodule.exports = EventListener;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA3B;AAEA;AACA;AACA;AACA;;;AACA,IAAIC,aAAa,GAAG;EAClB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,MAAM,EAAE,gBAAUC,MAAV,EAAkBC,SAAlB,EAA6BC,QAA7B,EAAuC;IAC7C,IAAIF,MAAM,CAACG,gBAAX,EAA6B;MAC3BH,MAAM,CAACG,gBAAP,CAAwBF,SAAxB,EAAmCC,QAAnC,EAA6C,KAA7C;MACA,OAAO;QACLE,MAAM,EAAE,kBAAY;UAClBJ,MAAM,CAACK,mBAAP,CAA2BJ,SAA3B,EAAsCC,QAAtC,EAAgD,KAAhD;QACD;MAHI,CAAP;IAKD,CAPD,MAOO,IAAIF,MAAM,CAACM,WAAX,EAAwB;MAC7BN,MAAM,CAACM,WAAP,CAAmB,OAAOL,SAA1B,EAAqCC,QAArC;MACA,OAAO;QACLE,MAAM,EAAE,kBAAY;UAClBJ,MAAM,CAACO,WAAP,CAAmB,OAAON,SAA1B,EAAqCC,QAArC;QACD;MAHI,CAAP;IAKD;EACF,CAzBiB;;EA2BlB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEM,OAAO,EAAE,iBAAUR,MAAV,EAAkBC,SAAlB,EAA6BC,QAA7B,EAAuC;IAC9C,IAAIF,MAAM,CAACG,gBAAX,EAA6B;MAC3BH,MAAM,CAACG,gBAAP,CAAwBF,SAAxB,EAAmCC,QAAnC,EAA6C,IAA7C;MACA,OAAO;QACLE,MAAM,EAAE,kBAAY;UAClBJ,MAAM,CAACK,mBAAP,CAA2BJ,SAA3B,EAAsCC,QAAtC,EAAgD,IAAhD;QACD;MAHI,CAAP;IAKD,CAPD,MAOO;MACL,IAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;QACzCC,OAAO,CAACC,KAAR,CAAc,iEAAiE,oEAAjE,GAAwI,+BAAtJ;MACD;;MACD,OAAO;QACLT,MAAM,EAAER;MADH,CAAP;IAGD;EACF,CAnDiB;EAqDlBkB,eAAe,EAAE,2BAAY,CAAE;AArDb,CAApB;AAwDAC,MAAM,CAACC,OAAP,GAAiBlB,aAAjB"},"metadata":{},"sourceType":"script"}