{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n\n  var ref = element.ref;\n\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  return (// This has a few false positives w/r/t empty components.\n    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref\n  );\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n\n  var ref = element.ref;\n\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;","map":{"version":3,"names":["ReactOwner","require","ReactRef","attachRef","ref","component","owner","getPublicInstance","addComponentAsRefTo","detachRef","removeComponentAsRefFrom","attachRefs","instance","element","_owner","shouldUpdateRefs","prevElement","nextElement","prevEmpty","nextEmpty","detachRefs","module","exports"],"sources":["/Users/rlborgen/git/ionconfig/editor/node_modules/react-popout/node_modules/react/lib/ReactRef.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n\n  return(\n    // This has a few false positives w/r/t empty components.\n    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref\n  );\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,SAAxB,EAAmCC,KAAnC,EAA0C;EACxC,IAAI,OAAOF,GAAP,KAAe,UAAnB,EAA+B;IAC7BA,GAAG,CAACC,SAAS,CAACE,iBAAV,EAAD,CAAH;EACD,CAFD,MAEO;IACL;IACAP,UAAU,CAACQ,mBAAX,CAA+BH,SAA/B,EAA0CD,GAA1C,EAA+CE,KAA/C;EACD;AACF;;AAED,SAASG,SAAT,CAAmBL,GAAnB,EAAwBC,SAAxB,EAAmCC,KAAnC,EAA0C;EACxC,IAAI,OAAOF,GAAP,KAAe,UAAnB,EAA+B;IAC7BA,GAAG,CAAC,IAAD,CAAH;EACD,CAFD,MAEO;IACL;IACAJ,UAAU,CAACU,wBAAX,CAAoCL,SAApC,EAA+CD,GAA/C,EAAoDE,KAApD;EACD;AACF;;AAEDJ,QAAQ,CAACS,UAAT,GAAsB,UAAUC,QAAV,EAAoBC,OAApB,EAA6B;EACjD,IAAIA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAApC,EAA2C;IACzC;EACD;;EACD,IAAIT,GAAG,GAAGS,OAAO,CAACT,GAAlB;;EACA,IAAIA,GAAG,IAAI,IAAX,EAAiB;IACfD,SAAS,CAACC,GAAD,EAAMQ,QAAN,EAAgBC,OAAO,CAACC,MAAxB,CAAT;EACD;AACF,CARD;;AAUAZ,QAAQ,CAACa,gBAAT,GAA4B,UAAUC,WAAV,EAAuBC,WAAvB,EAAoC;EAC9D;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA,IAAIC,SAAS,GAAGF,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAxD;EACA,IAAIG,SAAS,GAAGF,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAxD;EAEA,OACE;IACAC,SAAS,IAAIC,SAAb,IAA0BF,WAAW,CAACH,MAAZ,KAAuBE,WAAW,CAACF,MAA7D,IAAuEG,WAAW,CAACb,GAAZ,KAAoBY,WAAW,CAACZ;EAFzG;AAID,CApBD;;AAsBAF,QAAQ,CAACkB,UAAT,GAAsB,UAAUR,QAAV,EAAoBC,OAApB,EAA6B;EACjD,IAAIA,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAApC,EAA2C;IACzC;EACD;;EACD,IAAIT,GAAG,GAAGS,OAAO,CAACT,GAAlB;;EACA,IAAIA,GAAG,IAAI,IAAX,EAAiB;IACfK,SAAS,CAACL,GAAD,EAAMQ,QAAN,EAAgBC,OAAO,CAACC,MAAxB,CAAT;EACD;AACF,CARD;;AAUAO,MAAM,CAACC,OAAP,GAAiBpB,QAAjB"},"metadata":{},"sourceType":"script"}