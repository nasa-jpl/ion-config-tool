{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n'use strict';\n\nvar EventListener = require('fbjs/lib/EventListener');\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar PooledClass = require('./PooledClass');\n\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar ReactMount = require('./ReactMount');\n\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\n\nvar getEventTarget = require('./getEventTarget');\n\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\n\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n} // Used to store ancestor hierarchy in top level callback\n\n\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function destructor() {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  // TODO: Re-enable event.path handling\n  //\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n  //   // New browsers have a path attribute on native events\n  //   handleTopLevelWithPath(bookKeeping);\n  // } else {\n  //   // Legacy browsers don't have a path attribute on native events\n  //   handleTopLevelWithoutPath(bookKeeping);\n  // }\n  void handleTopLevelWithPath; // temporarily unused\n\n  handleTopLevelWithoutPath(bookKeeping);\n} // Legacy browsers don't have a path attribute on native events\n\n\nfunction handleTopLevelWithoutPath(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window; // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n\n  var ancestor = topLevelTarget;\n\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n} // New browsers have a path attribute on native events\n\n\nfunction handleTopLevelWithPath(bookKeeping) {\n  var path = bookKeeping.nativeEvent.path;\n  var currentNativeTarget = path[0];\n  var eventsFired = 0;\n\n  for (var i = 0; i < path.length; i++) {\n    var currentPathElement = path[i];\n\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\n      currentNativeTarget = path[i + 1];\n    } // TODO: slow\n\n\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\n\n    if (reactParent === currentPathElement) {\n      var currentPathElementID = ReactMount.getID(currentPathElement);\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\n      bookKeeping.ancestors.push(currentPathElement);\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\n      eventsFired++;\n\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget); // Jump to the root of this React render tree\n\n\n      while (currentPathElementID !== newRootID) {\n        i++;\n        currentPathElement = path[i];\n        currentPathElementID = ReactMount.getID(currentPathElement);\n      }\n    }\n  }\n\n  if (eventsFired === 0) {\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n  setHandleTopLevel: function setHandleTopLevel(handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n  setEnabled: function setEnabled(enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n  isEnabled: function isEnabled() {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n\n    if (!element) {\n      return null;\n    }\n\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {\n    var element = handle;\n\n    if (!element) {\n      return null;\n    }\n\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n  monitorScrollValue: function monitorScrollValue(refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n  dispatchEvent: function dispatchEvent(topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\nmodule.exports = ReactEventListener;","map":{"version":3,"names":["EventListener","require","ExecutionEnvironment","PooledClass","ReactInstanceHandles","ReactMount","ReactUpdates","assign","getEventTarget","getUnboundedScrollPosition","DOCUMENT_FRAGMENT_NODE_TYPE","findParent","node","nodeID","getID","rootID","getReactRootIDFromNodeID","container","findReactContainerForID","parent","getFirstReactDOM","TopLevelCallbackBookKeeping","topLevelType","nativeEvent","ancestors","prototype","destructor","length","addPoolingTo","twoArgumentPooler","handleTopLevelImpl","bookKeeping","handleTopLevelWithPath","handleTopLevelWithoutPath","topLevelTarget","window","ancestor","push","i","topLevelTargetID","ReactEventListener","_handleTopLevel","path","currentNativeTarget","eventsFired","currentPathElement","nodeType","reactParent","currentPathElementID","newRootID","scrollValueMonitor","cb","scrollPosition","_enabled","WINDOW_HANDLE","canUseDOM","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","trapBubbledEvent","handlerBaseName","handle","element","listen","dispatchEvent","bind","trapCapturedEvent","capture","monitorScrollValue","refresh","callback","getPooled","batchedUpdates","release","module","exports"],"sources":["/Users/rlborgen/git/ionconfig/editor/node_modules/react-popout/node_modules/react/lib/ReactEventListener.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  // TODO: Re-enable event.path handling\n  //\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n  //   // New browsers have a path attribute on native events\n  //   handleTopLevelWithPath(bookKeeping);\n  // } else {\n  //   // Legacy browsers don't have a path attribute on native events\n  //   handleTopLevelWithoutPath(bookKeeping);\n  // }\n\n  void handleTopLevelWithPath; // temporarily unused\n  handleTopLevelWithoutPath(bookKeeping);\n}\n\n// Legacy browsers don't have a path attribute on native events\nfunction handleTopLevelWithoutPath(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\n// New browsers have a path attribute on native events\nfunction handleTopLevelWithPath(bookKeeping) {\n  var path = bookKeeping.nativeEvent.path;\n  var currentNativeTarget = path[0];\n  var eventsFired = 0;\n  for (var i = 0; i < path.length; i++) {\n    var currentPathElement = path[i];\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\n      currentNativeTarget = path[i + 1];\n    }\n    // TODO: slow\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\n    if (reactParent === currentPathElement) {\n      var currentPathElementID = ReactMount.getID(currentPathElement);\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\n      bookKeeping.ancestors.push(currentPathElement);\n\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\n      eventsFired++;\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);\n\n      // Jump to the root of this React render tree\n      while (currentPathElementID !== newRootID) {\n        i++;\n        currentPathElement = path[i];\n        currentPathElementID = ReactMount.getID(currentPathElement);\n      }\n    }\n  }\n  if (eventsFired === 0) {\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;"],"mappings":"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"},"metadata":{},"sourceType":"script"}