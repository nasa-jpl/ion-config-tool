{"ast":null,"code":"import _classCallCheck from\"/Users/rlborgen/git/ionconfig/editor/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/rlborgen/git/ionconfig/editor/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/rlborgen/git/ionconfig/editor/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/rlborgen/git/ionconfig/editor/node_modules/@babel/runtime/helpers/esm/createSuper.js\";//        IonModelLoader.jsx     IonModelLoader React Component\n//\n//        Copyright (c) 2018, California Institute of Technology.\n//        ALL RIGHTS RESERVED.  U.S. Government Sponsorship\n//        acknowledged.\n//                                                                   \n//      Author: Rick Borgen, Jet Propulsion Laboratory         \n//                                                               \nimport React from'react';import{FormControl}from'react-bootstrap';import{Col}from'react-bootstrap';import{Button,ButtonToolbar}from'react-bootstrap';import{Glyphicon}from'react-bootstrap';import{Alert}from'react-bootstrap';import cmdTypes from'./cmdTypes.json';import paramTypes from'./paramTypes.json';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var IonModelLoader=/*#__PURE__*/function(_React$Component){_inherits(IonModelLoader,_React$Component);var _super=_createSuper(IonModelLoader);function IonModelLoader(props){var _this;_classCallCheck(this,IonModelLoader);_this=_super.call(this,props);_this.handleFileChange=function(e){// special fetch of file object from html5 file input widget\nvar modfile=document.getElementById('ionmodel').files[0];console.log(\"filename change!\"+modfile.name);console.log(\"state: \"+JSON.stringify(_this.state.ion));//console.log(\"state: \" + JSON.stringify(this));\nvar newState=Object.assign({},_this.state);newState.modelFile=modfile;newState.errMsg=\"\";_this.setState(newState);};_this.handleFileLoad=function(e){// now we operate on the file contents, since loading is complete\n//console.log(\"result: \" + e.target.result);\nconsole.log(\"$$$$$ extract model!\");var json={};var newState=Object.assign({},_this.state);try{json=JSON.parse(e.target.result);}catch(err){_this.setError(\"Failed to parse the JSON file. \"+err);return;}//console.log(\"Parse result: \" + JSON.stringify(json));\nnewState.modelJson=json;_this.setState(newState);if(!_this.extractModel())// extract & flatten model into state\nreturn;// skip the load transaction on failure\n//console.log(\"model object = \" + JSON.stringify(this.state.modelJson));\nvar tran={action:\"LOAD-ION-MODEL\",ionModel:_this.state.ion,hosts:_this.state.hosts,ipaddrs:_this.state.ipaddrs,nodes:_this.state.nodes,graphs:_this.state.graphs,configs:_this.state.configs,commands:_this.state.commands,cloneValues:_this.state.cloneValues};_this.props.dispatch(tran);};_this.load=function(){console.log(\"load ion model!\"+_this.state.modelFile);try{console.log(\"create file for: \"+_this.state.modelFile);var modfile=_this.state.modelFile;console.log(\"model file name: \"+modfile.name);var reader=new FileReader();reader.onload=_this.handleFileLoad;reader.readAsText(modfile);}catch(err){_this.setError(\"Failed to load the Ion Model file.\");}};console.log(\"IonModelLoader ctor\");var ionObj={\"name\":\"test\",\"desc\":\"Test ION Model\",\"nextNodeNum\":1,\"currentContacts\":\"\"};_this.state={ion:ionObj,// model attributes\nmodelFile:\"\",// File object\nmodelJson:{},// JSON object\nhosts:{},ipaddrs:{},graphs:{},nodes:{},configs:{},commands:{},cloneValues:{},errMsg:\"\"};console.log(\"IonModelLoader ctor done.\");return _this;}_createClass(IonModelLoader,[{key:\"setError\",value:function setError(msg){console.log(msg);var newState=Object.assign({},this.state);newState.errMsg=msg;this.setState(newState);}},{key:\"extractModel\",value:function extractModel(){// extract the Ion config JSON structure &\n// flatten the data structures for efficient access\n// make short names for state objects\nvar modelObj=this.state.modelJson;var ion=this.state.ion;var hosts=this.state.hosts;var ipaddrs=this.state.ipaddrs;var nodes=this.state.nodes;var graphs=this.state.graphs;var cloneValues=this.state.cloneValues;console.log(\"=== Ingesting user ion model.  ion: \"+JSON.stringify(ion));console.log(\"ion WAS: \"+JSON.stringify(ion));if(modelObj.hasOwnProperty(\"ionModelName\"))ion.name=modelObj[\"ionModelName\"];else{this.setError(\"The json file is not an Ion Model.\");return false;}if(modelObj.hasOwnProperty(\"ionModelDesc\"))ion.desc=modelObj[\"ionModelDesc\"];if(modelObj.hasOwnProperty(\"nextNodeNum\"))ion.nextNodeNum=modelObj[\"nextNodeNum\"];if(modelObj.hasOwnProperty(\"currentContacts\"))ion.currentContacts=modelObj[\"currentContacts\"];var hostList=[];if(modelObj.hasOwnProperty(\"hosts\"))// optional for now.\nhostList=modelObj.hosts;for(var i=0;i<hostList.length;i++){var hostObj=hostList[i];var hostKey=hostObj.hostName;var ipAddrs=hostObj.ipAddrs;// build the nodes state object\nhosts[hostKey]={\"id\":hostKey,\"name\":hostObj[\"hostName\"],\"desc\":hostObj[\"hostDesc\"],\"linefeed\":hostObj[\"linefeed\"],\"ipAddrKeys\":[]};var hostCmdKey=\"host_\"+hostKey;var cmdObj={\"id\":hostCmdKey,\"typeKey\":\"host_hostkey\",\"values\":[hostKey]};var cloneVal=this.props.makeCloneVal(hostKey,cmdObj);cloneValues[hostCmdKey]=cloneVal;// get ipAddrs\nvar ipCnt=ipAddrs?ipAddrs.length:0;for(var j=0;j<ipCnt;j++){var uniqid=this.props.getUniqId();var ipCmdKey=\"ipAddr_\"+uniqid;var ipAddr=ipAddrs[j];ipaddrs[ipCmdKey]={\"id\":ipCmdKey,\"hostKey\":hostKey,\"ipAddr\":ipAddr};hosts[hostKey].ipAddrKeys.push(ipCmdKey);var ipObj={\"id\":ipCmdKey,\"typeKey\":\"host_ipaddr\",\"values\":[ipAddr]};var _cloneVal=this.props.makeCloneVal(hostKey,ipObj);cloneValues[ipCmdKey]=_cloneVal;}};console.log(\"ion IS:  \"+JSON.stringify(ion));var nodeList=[];if(modelObj.hasOwnProperty(\"nodes\"))// optional for now.\nnodeList=modelObj.nodes;for(i=0;i<nodeList.length;i++){var nodeObj=nodeList[i];var nodeKey=nodeObj[\"nodeName\"];// build the nodes state object\nnodes[nodeKey]={\"id\":nodeObj[\"nodeName\"],\"longName\":nodeObj[\"nodeDesc\"],\"ionNodeNum\":nodeObj[\"nodeNum\"],\"ionVersion\":nodeObj[\"ionVersion\"],\"hostKey\":nodeObj[\"hostName\"],\"configKeys\":[]};// build nodenum & nodekey clone value\nvar numCmdKey=\"nodeNum_\"+nodeKey;var _cmdObj={\"id\":numCmdKey,\"typeKey\":\"node_nodenum\",\"values\":[nodeObj[\"nodeNum\"]]};var _cloneVal2=this.props.makeCloneVal(nodeKey,_cmdObj);cloneValues[numCmdKey]=_cloneVal2;var nodeCmdKey=\"nodeKey_\"+nodeKey;_cmdObj={\"id\":nodeCmdKey,\"typeKey\":\"node_nodekey\",\"values\":[nodeKey]};_cloneVal2=this.props.makeCloneVal(nodeKey,_cmdObj);cloneValues[nodeCmdKey]=_cloneVal2;console.log(\"node item=\"+JSON.stringify(nodeObj));var configsObj=nodeObj.configs;console.log(\"node configs=\"+JSON.stringify(configsObj));var configKeyList=this.extractConfigs(nodeKey,configsObj);console.log(\"Node got configKeys: \"+configKeyList);nodes[nodeKey].configKeys=configKeyList;}console.log(\"=== Ingesting contacts.\");var graphList=[];if(modelObj.hasOwnProperty(\"graphs\"))// optional for now.\ngraphList=modelObj.graphs;for(i=0;i<graphList.length;i++){// normally just one item\nvar graphObj=graphList[i];var graphKey=graphObj[\"graphName\"];// build the graph state object\ngraphs[graphKey]={\"id\":graphObj[\"graphName\"],\"name\":graphObj[\"graphName\"],\"desc\":graphObj[\"graphDesc\"],\"ionVersion\":graphObj[\"ionVersion\"],\"configKey\":\"\"};console.log(\"graph item=\"+JSON.stringify(graphObj));configsObj=graphObj.configs;console.log(\"graph configs=\"+JSON.stringify(configsObj));var _configKeyList=this.extractConfigs(graphKey,configsObj);console.log(\"Node got configKeys: \"+_configKeyList);graphs[graphKey].configKey=_configKeyList[0];// assuming just one\n}// NOTE: contacts was old name with old attributes\nvar contactsList=[];if(modelObj.hasOwnProperty(\"contacts\"))// optional for now.\ncontactsList=modelObj.contacts;for(i=0;i<contactsList.length;i++){// normally just one item\ngraphObj=contactsList[i];graphKey=graphObj.contactsName;// build the graph state object\ngraphs[graphKey]={\"id\":graphObj[\"graphName\"],\"name\":graphObj[\"graphName\"],\"desc\":graphObj[\"graphDesc\"],\"configKey\":\"\"};console.log(\"graph item=\"+JSON.stringify(graphObj));configsObj=graphObj.configs;console.log(\"contacts configs=\"+JSON.stringify(configsObj));var _configKeyList2=this.extractConfigs(graphKey,configsObj);console.log(\"Node got configKeys: \"+_configKeyList2);graphs[graphKey].configKey=_configKeyList2[0];// assuming just one\n}this.assignClones();// analyze full new command set for cloneVal dependents\nreturn true;}},{key:\"extractConfigs\",value:function extractConfigs(groupKey,configsObj){// groupKey is for a group of configs (a node or contacts)\nconsole.log(\"extractConfigs groupKey:\"+groupKey);//console.log(\"extractConfigs configsObj:\" + JSON.stringify(configsObj) );\n// make short names for state objects\nvar configs=this.state.configs;if(configsObj===undefined){configsObj={};}var keyList=[];// save generated keys for caller\nfor(var configType in configsObj){// object names are configTypes\n//console.log(\"loop for configType:\" + configType);\nvar configKey=groupKey+\".\"+configType;if(configType===\"contacts\")// special case for ionrc used for contacts\nconfigKey=groupKey+\".cg\";keyList.push(configKey);// save for caller\n// build the configs state object\nconfigs[configKey]={\"id\":configKey,\"nodeKey\":groupKey,\"configType\":configType,\"cmdKeys\":[]};var commandsList=configsObj[configType].commands;var cmdKeyList=this.extractCommands(groupKey,configType,configKey,commandsList);//console.log(\"Config got cmdKeys: \" + cmdKeyList);\nconfigs[configKey].cmdKeys=cmdKeyList;}return keyList;// return list of configKeys\n}// extract JSON config definition & build config with commands & cloneValues\n// extractCommands (nodeIdx,configKey) {\n},{key:\"extractCommands\",value:function extractCommands(groupKey,configType,configKey,commandsList){console.log(\"extractCommands groupKey:\"+groupKey);console.log(\"extractCommands configType:\"+configType);console.log(\"extractCommands configKey:\"+configKey);//console.log(\"extractCommands commandsObj:\" + JSON.stringify(commandsList) );\nif(commandsList===undefined){commandsList=[];}var keyList=[];// make short names for state objects\nvar commands=this.state.commands;var cloneValues=this.state.cloneValues;//console.log(\"commands list=\" + JSON.stringify(commandsList) );\nfor(var i=0;i<commandsList.length;i++){var cmdObj=commandsList[i];var cmdTypeKey=cmdObj.type;console.log(\"cmdTypeKey: \"+cmdTypeKey);var uniqid=this.props.getUniqId();var cmdKey=\"cmd_\"+uniqid;keyList.push(cmdKey);var cmdType=cmdTypes[cmdTypeKey];commands[cmdKey]={\"id\":cmdKey,\"configKey\":configKey,\"typeKey\":cmdTypeKey,\"typeName\":cmdObj.type,\"order\":cmdType.order,\"lastUpdate\":cmdObj.lastUpdate,\"values\":[]};//console.log(\"command item=\" + JSON.stringify(commands[cmdKey]) );\nfor(var j=0;j<cmdObj.parameters.length;j++){var pVal=cmdObj.parameters[j];commands[cmdKey].values.push(pVal);};// build object with all clone-able values\nif(cmdTypes[cmdTypeKey].isCloned){var cloneVal=this.props.makeCloneVal(groupKey,commands[cmdKey]);var cvKey=cloneVal.id;cloneValues[cvKey]=cloneVal;}}return keyList;// return list of cmdKeys\n}},{key:\"assignClones\",value:// review all commands for cloneVal sources and cloneVal dependents\nfunction assignClones(){// make short names for state objects\nvar commands=this.state.commands;var cloneValues=this.state.cloneValues;var findCloneVal=this.props.findCloneVal;// identify commands dependent on cloneValues\n// and push them on to the cloneValue list for update notifications\nconsole.log(\"=== Identify clones using cloneValues from user ion model.\");for(var cmdKey in commands){var cmd=commands[cmdKey];var cmdTypeKey=cmd.typeKey;console.log(\"$$$ cmdKey: \"+cmdKey+\" has type: \"+cmdTypeKey);var cmdType=cmdTypes[cmd.typeKey];if(cmdType.copyClone||cmdType.pickClone){for(var i=0;i<cmdType.paramTypes.length;i++){var paramTypeKey=cmdType.paramTypes[i];var paramType=paramTypes[paramTypeKey];console.log(\"$$$ consider paramType \"+paramType.id+\" for cloning.\");if(paramType.copyClone||paramType.pickClone){var val=cmd.values[i];var type=paramType.valType;console.log(\"$$$ seeking clone value for type: \"+type+\" with value of \"+val);var cloneVal=findCloneVal(cloneValues,type,val);if(cloneVal){console.log(\"=== building clone.\");var clone={\"cmdKey\":cmdKey,\"valIdx\":i};console.log(\"$$$ created clone key: \"+JSON.stringify(clone));cloneVal.clones.push(clone);}}}}}}},{key:\"makeAlertElem\",value:function makeAlertElem(msg){return/*#__PURE__*/_jsx(Alert,{bsStyle:\"danger\",children:/*#__PURE__*/_jsxs(\"b\",{children:[\"ERROR: \",msg]})});}},{key:\"render\",value:function render(){// NOTE: this is an uncontrolled input form, so no value parameter provided\n//     the html5 file input form controls its own state\nconsole.log(\"IonModelLoader render form\");// check for alert\nvar msg=this.state.errMsg;var alert=msg===\"\"?\"\":this.makeAlertElem(msg);var form=/*#__PURE__*/_jsx(FormControl,{id:\"ionmodel\",name:\"name\",type:\"file\",label:\"Label\",accept:\".json\",className:\"inputClass\",onChange:this.handleFileChange});var icon=\"remove\";console.log(\"IonModelLoader render div\");return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(Col,{className:\"text-right\",sm:2,children:/*#__PURE__*/_jsx(\"b\",{children:\"Ion Model File (.json)\"})}),/*#__PURE__*/_jsx(Col,{sm:2,children:form}),/*#__PURE__*/_jsx(Col,{sm:2,children:/*#__PURE__*/_jsxs(ButtonToolbar,{children:[/*#__PURE__*/_jsx(Button,{bsSize:\"sm\",bsStyle:\"primary\",onClick:this.load,children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{bsSize:\"sm\",bsStyle:\"success\",onClick:this.props.noLoadIonModel,children:/*#__PURE__*/_jsx(Glyphicon,{glyph:icon})})]})}),/*#__PURE__*/_jsx(Col,{sm:4,children:alert})]});}}]);return IonModelLoader;}(React.Component);export{IonModelLoader as default};","map":{"version":3,"names":["React","FormControl","Col","Button","ButtonToolbar","Glyphicon","Alert","cmdTypes","paramTypes","IonModelLoader","props","handleFileChange","e","modfile","document","getElementById","files","console","log","name","JSON","stringify","state","ion","newState","Object","assign","modelFile","errMsg","setState","handleFileLoad","json","parse","target","result","err","setError","modelJson","extractModel","tran","action","ionModel","hosts","ipaddrs","nodes","graphs","configs","commands","cloneValues","dispatch","load","reader","FileReader","onload","readAsText","ionObj","msg","modelObj","hasOwnProperty","desc","nextNodeNum","currentContacts","hostList","i","length","hostObj","hostKey","hostName","ipAddrs","hostCmdKey","cmdObj","cloneVal","makeCloneVal","ipCnt","j","uniqid","getUniqId","ipCmdKey","ipAddr","ipAddrKeys","push","ipObj","nodeList","nodeObj","nodeKey","numCmdKey","nodeCmdKey","configsObj","configKeyList","extractConfigs","configKeys","graphList","graphObj","graphKey","configKey","contactsList","contacts","contactsName","assignClones","groupKey","undefined","keyList","configType","commandsList","cmdKeyList","extractCommands","cmdKeys","cmdTypeKey","type","cmdKey","cmdType","order","lastUpdate","parameters","pVal","values","isCloned","cvKey","id","findCloneVal","cmd","typeKey","copyClone","pickClone","paramTypeKey","paramType","val","valType","clone","clones","alert","makeAlertElem","form","icon","noLoadIonModel","Component"],"sources":["/Users/rlborgen/git/ionconfig/editor/src/IonModelLoader.jsx"],"sourcesContent":["//        IonModelLoader.jsx     IonModelLoader React Component\n//\n//        Copyright (c) 2018, California Institute of Technology.\n//        ALL RIGHTS RESERVED.  U.S. Government Sponsorship\n//        acknowledged.\n//                                                                   \n//      Author: Rick Borgen, Jet Propulsion Laboratory         \n//                                                               \nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormControl} from 'react-bootstrap';\nimport {Col} from 'react-bootstrap';\nimport {Button, ButtonToolbar} from 'react-bootstrap';\nimport {Glyphicon} from 'react-bootstrap';\nimport {Alert} from 'react-bootstrap';\n\nimport cmdTypes     from './cmdTypes.json';\nimport paramTypes   from './paramTypes.json';\n\nexport default class IonModelLoader extends React.Component {\n  constructor (props) {\n    super(props);\n    console.log(\"IonModelLoader ctor\");\n    var ionObj = { \"name\": \"test\", \"desc\": \"Test ION Model\", \"nextNodeNum\": 1, \"currentContacts\": \"\"};\n    this.state = {\n      ion: ionObj,         // model attributes\n      modelFile: \"\",       // File object\n      modelJson: {},       // JSON object\n      hosts: {},\n      ipaddrs: {},\n      graphs: {},\n      nodes: {},\n      configs: {},\n      commands: {},\n      cloneValues: {},\n\n      errMsg: \"\"\n    };\n    console.log(\"IonModelLoader ctor done.\");\n  }\n  setError(msg) {\n    console.log(msg);\n    var newState = Object.assign({},this.state);\n    newState.errMsg = msg;\n    this.setState (newState);\n  };\n  extractModel () {\n    // extract the Ion config JSON structure &\n    // flatten the data structures for efficient access\n\n    // make short names for state objects\n    const modelObj = this.state.modelJson;\n    var ion = this.state.ion;\n    var hosts = this.state.hosts;\n    var ipaddrs = this.state.ipaddrs;\n    var nodes = this.state.nodes;\n    var graphs = this.state.graphs;\n    var cloneValues = this.state.cloneValues;\n\n    console.log(\"=== Ingesting user ion model.  ion: \" + JSON.stringify(ion));\n    console.log(\"ion WAS: \" + JSON.stringify(ion));\n    if(modelObj.hasOwnProperty(\"ionModelName\"))\n      ion.name = modelObj[\"ionModelName\"];\n    else {\n       this.setError(\"The json file is not an Ion Model.\");\n       return false;\n    }\n    if(modelObj.hasOwnProperty(\"ionModelDesc\"))\n      ion.desc = modelObj[\"ionModelDesc\"];\n    if(modelObj.hasOwnProperty(\"nextNodeNum\"))\n      ion.nextNodeNum = modelObj[\"nextNodeNum\"];\n    if(modelObj.hasOwnProperty(\"currentContacts\"))\n      ion.currentContacts = modelObj[\"currentContacts\"];\n\n    var hostList = [];\n    if(modelObj.hasOwnProperty(\"hosts\"))  // optional for now.\n      hostList = modelObj.hosts;\n    for (var i=0; i<hostList.length; i++) {\n      var hostObj = hostList[i];\n      var hostKey = hostObj.hostName;\n      var ipAddrs = hostObj.ipAddrs;\n      // build the nodes state object\n      hosts[hostKey] = { \n        \"id\" : hostKey, \n        \"name\" : hostObj[\"hostName\"], \n        \"desc\" : hostObj[\"hostDesc\"], \n        \"linefeed\" : hostObj[\"linefeed\"],\n        \"ipAddrKeys\" : []\n      };\n      let hostCmdKey = \"host_\" + hostKey;\n      let cmdObj = { \"id\": hostCmdKey, \"typeKey\": \"host_hostkey\", \"values\":[ hostKey ] };\n      let cloneVal = this.props.makeCloneVal(hostKey,cmdObj);\n      cloneValues[hostCmdKey] = cloneVal;\n      // get ipAddrs\n      const ipCnt = ipAddrs?  ipAddrs.length : 0 ;\n      for (var j=0; j<ipCnt; j++) { \n        let uniqid = this.props.getUniqId();\n        let ipCmdKey = \"ipAddr_\" + uniqid;\n        let ipAddr = ipAddrs[j];\n        ipaddrs[ipCmdKey] = {\n          \"id\" : ipCmdKey,\n          \"hostKey\" : hostKey,\n          \"ipAddr\" : ipAddr\n        }\n        hosts[hostKey].ipAddrKeys.push(ipCmdKey);\n        let ipObj = { \"id\": ipCmdKey, \"typeKey\": \"host_ipaddr\", \"values\":[ ipAddr ] };\n        let cloneVal = this.props.makeCloneVal(hostKey,ipObj);\n        cloneValues[ipCmdKey] = cloneVal;\n      }\n    };\n    console.log(\"ion IS:  \" + JSON.stringify(ion));\n    var nodeList = [];\n    if(modelObj.hasOwnProperty(\"nodes\"))  // optional for now.\n      nodeList = modelObj.nodes;\n    for (i=0; i<nodeList.length; i++) {\n      var nodeObj = nodeList[i];\n      var nodeKey = nodeObj[\"nodeName\"];\n      // build the nodes state object\n      nodes[nodeKey] = { \n        \"id\" : nodeObj[\"nodeName\"], \n        \"longName\" : nodeObj[\"nodeDesc\"], \n        \"ionNodeNum\" : nodeObj[\"nodeNum\"],\n        \"ionVersion\" : nodeObj[\"ionVersion\"],\n        \"hostKey\" : nodeObj[\"hostName\"],\n        \"configKeys\" : []\n      };\n      // build nodenum & nodekey clone value\n      let numCmdKey = \"nodeNum_\" + nodeKey;\n      let cmdObj = { \"id\": numCmdKey, \"typeKey\": \"node_nodenum\", \"values\":[ nodeObj[\"nodeNum\"] ] };\n      let cloneVal = this.props.makeCloneVal(nodeKey,cmdObj);\n      cloneValues[numCmdKey] = cloneVal;\n      let nodeCmdKey = \"nodeKey_\" + nodeKey;\n      cmdObj = { \"id\": nodeCmdKey, \"typeKey\": \"node_nodekey\", \"values\":[ nodeKey ] };\n      cloneVal = this.props.makeCloneVal(nodeKey,cmdObj);\n      cloneValues[nodeCmdKey] = cloneVal;\n\n      console.log(\"node item=\" + JSON.stringify(nodeObj) );\n      var configsObj = nodeObj.configs;\n      console.log(\"node configs=\" + JSON.stringify(configsObj) );\n      const configKeyList = this.extractConfigs(nodeKey,configsObj);\n      console.log(\"Node got configKeys: \" + configKeyList);\n      nodes[nodeKey].configKeys = configKeyList;\n    }\n    console.log(\"=== Ingesting contacts.\");\n    var graphList = [];\n    if (modelObj.hasOwnProperty(\"graphs\"))  // optional for now.\n      graphList = modelObj.graphs\n    for (i=0; i<graphList.length; i++) {  // normally just one item\n      var graphObj = graphList[i];\n      var graphKey = graphObj[\"graphName\"];\n      // build the graph state object\n      graphs[graphKey] = { \n        \"id\"   : graphObj[\"graphName\"], \n        \"name\" : graphObj[\"graphName\"], \n        \"desc\" : graphObj[\"graphDesc\"],\n        \"ionVersion\" : graphObj[\"ionVersion\"],\n        \"configKey\" : \"\"\n      };\n      console.log(\"graph item=\" + JSON.stringify(graphObj) );\n      configsObj = graphObj.configs;\n      console.log(\"graph configs=\" + JSON.stringify(configsObj) );\n      const configKeyList = this.extractConfigs(graphKey,configsObj);\n      console.log(\"Node got configKeys: \" + configKeyList);\n      graphs[graphKey].configKey = configKeyList[0];   // assuming just one\n    }\n    // NOTE: contacts was old name with old attributes\n    var contactsList = [];\n    if (modelObj.hasOwnProperty(\"contacts\"))  // optional for now.\n      contactsList = modelObj.contacts;\n    for (i=0; i<contactsList.length; i++) {  // normally just one item\n      graphObj  = contactsList[i];\n      graphKey  = graphObj.contactsName;\n      // build the graph state object\n      graphs[graphKey] = { \n        \"id\"   : graphObj[\"graphName\"], \n        \"name\" : graphObj[\"graphName\"], \n        \"desc\" : graphObj[\"graphDesc\"],\n        \"configKey\" : \"\"\n      };\n      console.log(\"graph item=\" + JSON.stringify(graphObj) );\n      configsObj = graphObj.configs;\n      console.log(\"contacts configs=\" + JSON.stringify(configsObj) );\n      const configKeyList = this.extractConfigs(graphKey,configsObj);\n      console.log(\"Node got configKeys: \" + configKeyList);\n      graphs[graphKey].configKey = configKeyList[0];   // assuming just one\n    }\n    this.assignClones();   // analyze full new command set for cloneVal dependents\n    return true;\n  };\n  extractConfigs(groupKey,configsObj) {\n    // groupKey is for a group of configs (a node or contacts)\n    console.log(\"extractConfigs groupKey:\" + groupKey);\n    //console.log(\"extractConfigs configsObj:\" + JSON.stringify(configsObj) );\n    // make short names for state objects\n    var configs  = this.state.configs;\n\n    if (configsObj === undefined) { configsObj = {}; }\n    var keyList = [];  // save generated keys for caller\n    for (var configType in configsObj) {   // object names are configTypes\n      //console.log(\"loop for configType:\" + configType);\n      var configKey = groupKey + \".\" + configType;\n      if (configType === \"contacts\")   // special case for ionrc used for contacts\n        configKey = groupKey + \".cg\";\n      keyList.push(configKey);    // save for caller\n      // build the configs state object\n      configs[configKey] = {\n        \"id\" : configKey,\n        \"nodeKey\": groupKey,\n        \"configType\" : configType,\n        \"cmdKeys\" : [] \n      };\n      var commandsList = configsObj[configType].commands;\n      const cmdKeyList = this.extractCommands(groupKey,configType,configKey,commandsList);\n      //console.log(\"Config got cmdKeys: \" + cmdKeyList);\n      configs[configKey].cmdKeys = cmdKeyList;\n    }\n    return keyList;   // return list of configKeys\n  }\n\n  // extract JSON config definition & build config with commands & cloneValues\n // extractCommands (nodeIdx,configKey) {\n  extractCommands(groupKey,configType,configKey,commandsList) {\n    console.log(\"extractCommands groupKey:\" + groupKey);\n    console.log(\"extractCommands configType:\" + configType);\n    console.log(\"extractCommands configKey:\" + configKey);\n    //console.log(\"extractCommands commandsObj:\" + JSON.stringify(commandsList) );\n    if (commandsList === undefined) { commandsList = []; }\n    var keyList = [];\n    // make short names for state objects\n    var commands = this.state.commands;\n    var cloneValues = this.state.cloneValues;\n\n    //console.log(\"commands list=\" + JSON.stringify(commandsList) );\n    for (let i = 0; i < commandsList.length; i++) {\n      const cmdObj = commandsList[i];\n      const cmdTypeKey = cmdObj.type;\n      console.log(\"cmdTypeKey: \" + cmdTypeKey);\n      const uniqid = this.props.getUniqId();\n      const cmdKey = \"cmd_\" + uniqid;\n      keyList.push(cmdKey);\n      const cmdType = cmdTypes[cmdTypeKey];\n      commands[cmdKey] = {\n        \"id\" : cmdKey,\n        \"configKey\" : configKey,\n        \"typeKey\" : cmdTypeKey,\n        \"typeName\" : cmdObj.type,\n        \"order\" : cmdType.order,\n        \"lastUpdate\" : cmdObj.lastUpdate,\n        \"values\" : []\n      };\n      //console.log(\"command item=\" + JSON.stringify(commands[cmdKey]) );\n      for (var j = 0; j < cmdObj.parameters.length; j++) {\n        const pVal = cmdObj.parameters[j];\n        commands[cmdKey].values.push(pVal);\n      };\n      // build object with all clone-able values\n      if (cmdTypes[cmdTypeKey].isCloned) {\n        var cloneVal = this.props.makeCloneVal(groupKey,commands[cmdKey]);\n        var cvKey = cloneVal.id;\n        cloneValues[cvKey] = cloneVal;\n      }\n    }\n    return keyList;    // return list of cmdKeys\n  };\n  // review all commands for cloneVal sources and cloneVal dependents\n  assignClones() {\n    // make short names for state objects\n    var commands = this.state.commands;\n    var cloneValues = this.state.cloneValues;\n    const findCloneVal = this.props.findCloneVal;\n\n   // identify commands dependent on cloneValues\n    // and push them on to the cloneValue list for update notifications\n    console.log(\"=== Identify clones using cloneValues from user ion model.\");\n    for (var cmdKey in commands) {\n      let cmd = commands[cmdKey];\n      let cmdTypeKey = cmd.typeKey;\n      console.log(\"$$$ cmdKey: \" + cmdKey + \" has type: \" + cmdTypeKey);\n      let cmdType = cmdTypes[cmd.typeKey];\n      if(cmdType.copyClone  || cmdType.pickClone) {\n        for (let i = 0; i < cmdType.paramTypes.length; i++) {\n           let paramTypeKey = cmdType.paramTypes[i];\n           let paramType = paramTypes[paramTypeKey];\n           console.log(\"$$$ consider paramType \" + paramType.id + \" for cloning.\")\n           if (paramType.copyClone || paramType.pickClone) { \n              let val = cmd.values[i];\n              let type = paramType.valType;\n              console.log(\"$$$ seeking clone value for type: \" + type + \" with value of \" + val);\n              let cloneVal = findCloneVal(cloneValues,type,val);\n              if(cloneVal) {\n                console.log(\"=== building clone.\");\n                let clone = { \"cmdKey\" : cmdKey, \"valIdx\" : i };\n                console.log (\"$$$ created clone key: \" + JSON.stringify(clone));\n                cloneVal.clones.push(clone);\n              }\n           }\n        }\n      }\n    }\n  };\n  makeAlertElem(msg) {\n    return (<Alert bsStyle=\"danger\"><b>ERROR: {msg}</b></Alert>);\n  };\n  render() {\n    // NOTE: this is an uncontrolled input form, so no value parameter provided\n    //     the html5 file input form controls its own state\n    console.log(\"IonModelLoader render form\");\n    // check for alert\n    let msg = this.state.errMsg;\n    var alert = (msg === \"\")?  \"\" : this.makeAlertElem(msg);\n    var form =\n      <FormControl\n        id=\"ionmodel\"\n        name=\"name\"\n        type=\"file\"\n        label=\"Label\"\n        accept=\".json\"\n        className=\"inputClass\"\n        onChange={this.handleFileChange}\n      />;\n    let icon = \"remove\";\n    console.log(\"IonModelLoader render div\");\n    return (\n        <div>\n          <hr />\n          <Col className=\"text-right\" sm={2}><b>Ion Model File (.json)</b></Col>\n          <Col sm={2}>{form}</Col>\n          <Col sm={2}>\n            <ButtonToolbar>\n              <Button bsSize=\"sm\" bsStyle=\"primary\" onClick={this.load}>Submit</Button>\n              <Button bsSize=\"sm\" bsStyle=\"success\" onClick={this.props.noLoadIonModel}><Glyphicon glyph={icon} /></Button>\n            </ButtonToolbar>\n          </Col>\n          <Col sm={4}>{alert}</Col>\n        </div>\n    )\n  };\n  handleFileChange = (e) => {\n    // special fetch of file object from html5 file input widget\n    var modfile = document.getElementById('ionmodel').files[0];\n    console.log(\"filename change!\" + modfile.name);\n    console.log(\"state: \" + JSON.stringify(this.state.ion));\n    //console.log(\"state: \" + JSON.stringify(this));\n    var newState = Object.assign({},this.state);\n    newState.modelFile = modfile;\n    newState.errMsg = \"\";\n    this.setState (newState);\n  };\n  handleFileLoad = (e) => {\n    // now we operate on the file contents, since loading is complete\n    //console.log(\"result: \" + e.target.result);\n    console.log(\"$$$$$ extract model!\");\n    var json = {};\n    var newState = Object.assign({},this.state);\n    try {\n      json = JSON.parse(e.target.result);\n    }\n    catch (err) {\n      this.setError(\"Failed to parse the JSON file. \" + err);\n      return;\n    }\n    //console.log(\"Parse result: \" + JSON.stringify(json));\n    newState.modelJson = json;\n    this.setState(newState);\n    if (!this.extractModel()) // extract & flatten model into state\n      return;                 // skip the load transaction on failure\n\n    //console.log(\"model object = \" + JSON.stringify(this.state.modelJson));\n    var tran = {\n      action: \"LOAD-ION-MODEL\",\n      ionModel: this.state.ion,\n      hosts: this.state.hosts,\n      ipaddrs:this.state.ipaddrs,\n      nodes: this.state.nodes,\n      graphs: this.state.graphs,\n      configs: this.state.configs,\n      commands: this.state.commands,\n      cloneValues: this.state.cloneValues\n    };\n    this.props.dispatch(tran);\n  };\n  load = () => {\n    console.log(\"load ion model!\" + this.state.modelFile);\n    try {\n      console.log(\"create file for: \" + this.state.modelFile);\n      var modfile = this.state.modelFile;\n      console.log (\"model file name: \" + modfile.name);\n      var reader = new FileReader();\n      reader.onload = this.handleFileLoad;\n      reader.readAsText(modfile);\n    }\n    catch (err) {\n      this.setError(\"Failed to load the Ion Model file.\");\n    }\n  };\n}\n\nIonModelLoader.propTypes = {\n  getUniqId: PropTypes.func.isRequired,     // func to make a uniq id\n  makeCloneVal: PropTypes.func.isRequired,  // func to make a cloneVal\n  findCloneVal: PropTypes.func.isRequired,  // func to find a cloneVal\n  noLoadIonModel: PropTypes.func.isRequired,// func to cancle load of model\n  dispatch: PropTypes.func.isRequired       // func to handle transactions centrally\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}