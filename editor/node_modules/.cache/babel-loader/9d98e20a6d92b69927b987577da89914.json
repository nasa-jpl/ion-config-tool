{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar ReactElement = require('./ReactElement');\n\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar getIteratorFn = require('./getIteratorFn');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} text Component key to be escaped.\n * @return {string} An escaped string.\n */\n\n\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\n}\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\n\n\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\n          didWarnAboutMaps = true;\n        } // Iterator will provide entry [k,v] tuples rather than values.\n\n\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\n    }\n  }\n\n  return subtreeCount;\n}\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\n\n\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;","map":{"version":3,"names":["ReactCurrentOwner","require","ReactElement","ReactInstanceHandles","getIteratorFn","invariant","warning","SEPARATOR","SUBSEPARATOR","userProvidedKeyEscaperLookup","userProvidedKeyEscapeRegex","didWarnAboutMaps","userProvidedKeyEscaper","match","getComponentKey","component","index","key","wrapUserProvidedKey","toString","escapeUserProvidedKey","text","replace","traverseAllChildrenImpl","children","nameSoFar","callback","traverseContext","type","isValidElement","child","nextName","subtreeCount","nextNamePrefix","Array","isArray","i","length","iteratorFn","iterator","call","step","entries","ii","next","done","value","process","env","NODE_ENV","undefined","entry","addendum","_isReactElement","current","name","getName","childrenString","String","Object","keys","join","traverseAllChildren","module","exports"],"sources":["/Users/rlborgen/git/ionconfig/editor/node_modules/react-popout/node_modules/react/lib/traverseAllChildren.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} text Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;"],"mappings":"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"},"metadata":{},"sourceType":"script"}