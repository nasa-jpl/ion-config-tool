{"ast":null,"code":"/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar assign = require('./Object.assign');\n\nvar canDefineProperty = require('./canDefineProperty'); // The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\n\n\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\n\nvar ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      }); // self and source are DEV only properties.\n\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      }); // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n\n    Object.freeze(element.props);\n    Object.freeze(element);\n  }\n\n  return element;\n};\n\nReactElement.createElement = function (type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type); // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n};\n\nReactElement.cloneAndReplaceProps = function (oldElement, newProps) {\n  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n\n  return newElement;\n};\n\nReactElement.cloneElement = function (element, config, children) {\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\n\n\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;","map":{"version":3,"names":["ReactCurrentOwner","require","assign","canDefineProperty","REACT_ELEMENT_TYPE","Symbol","RESERVED_PROPS","key","ref","__self","__source","ReactElement","type","self","source","owner","props","element","$$typeof","_owner","process","env","NODE_ENV","_store","Object","defineProperty","configurable","enumerable","writable","value","validated","_self","_source","freeze","createElement","config","children","propName","undefined","hasOwnProperty","childrenLength","arguments","length","childArray","Array","i","defaultProps","current","createFactory","factory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","cloneAndReplaceProps","newProps","cloneElement","isValidElement","object","module","exports"],"sources":["/Users/rlborgen/git/ionconfig/editor/node_modules/react-popout/node_modules/react/lib/ReactElement.js"],"sourcesContent":["/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar assign = require('./Object.assign');\nvar canDefineProperty = require('./canDefineProperty');\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    Object.freeze(element.props);\n    Object.freeze(element);\n  }\n\n  return element;\n};\n\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\nReactElement.cloneAndReplaceProps = function (oldElement, newProps) {\n  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n\n  return newElement;\n};\n\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;"],"mappings":"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"},"metadata":{},"sourceType":"script"}