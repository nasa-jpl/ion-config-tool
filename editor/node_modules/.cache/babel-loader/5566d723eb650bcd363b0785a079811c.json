{"ast":null,"code":"import _classCallCheck from\"/Users/rlborgen/git/ionconfig/editor/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/rlborgen/git/ionconfig/editor/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/rlborgen/git/ionconfig/editor/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/rlborgen/git/ionconfig/editor/node_modules/@babel/runtime/helpers/esm/createSuper.js\";//        NetModel.jsx     NetModel React Component\n//\n//        Copyright (c) 2018, California Institute of Technology.\n//        ALL RIGHTS RESERVED.  U.S. Government Sponsorship\n//        acknowledged.\n//                                                                   \n//      Author: Rick Borgen, Jet Propulsion Laboratory         \n//                                                               \nimport React from'react';import{FormControl}from'react-bootstrap';import{Row,Col}from'react-bootstrap';import{Label,Button,ButtonToolbar}from'react-bootstrap';import{Panel}from'react-bootstrap';import{Glyphicon}from'react-bootstrap';import{saveAs}from\"file-saver\";import{Alert}from'react-bootstrap';import cmdTypes from'./cmdTypes.json';import paramTypes from'./paramTypes.json';import ionVersions from'./ionVersions.json';import NetHostList from'./NetHostList.jsx';import NetNodeList from'./NetNodeList.jsx';import NetHopList from'./NetHopList.jsx';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var NetModel=/*#__PURE__*/function(_React$Component){_inherits(NetModel,_React$Component);var _super=_createSuper(NetModel);function NetModel(props){var _this;_classCallCheck(this,NetModel);_this=_super.call(this,props);// props\n//  name\n_this.expand=function(){// activated by expand/contract shutter icon\nvar newState=Object.assign({},_this.state);var expandMode=_this.state.expandMode;if(expandMode)console.log(\"let's close-up network model list!\");else console.log(\"let's expand network mode list!\");newState.expandMode=!expandMode;// toggling flag changes render\n_this.setState(newState);};_this.edit=function(){// activated by Edit/Submit button\nvar newState=Object.assign({},_this.state);var editMode=_this.state.editMode;if(editMode)_this.submit();else{console.log(\"let's edit!\");newState.viewMode=true;// force viewing\n}newState.editMode=!editMode;// toggle mode\n_this.setState(newState);};_this.noedit=function(){// activated by Edit/Submit button\nvar newState=Object.assign({},_this.state);newState.editMode=false;// cancel editing\nnewState.viewMode=false;// cancel viewing\n_this.setState(newState);};_this.submit=function(){// callable by edit (above)\nconsole.log(\"submit net model updates!\"+JSON.stringify(_this.state.desc));var netModel={\"name\":_this.state.name,\"desc\":_this.state.desc};var tran={action:\"UPDATE-NET-MODEL\",netModel:netModel};_this.props.dispatch(tran);};_this.view=function(){// activated by view/hide button\nvar newState=Object.assign({},_this.state);var viewMode=_this.state.viewMode;if(viewMode)console.log(\"let's hide view panel!\");else console.log(\"let's show view panel!\");newState.viewMode=!viewMode;_this.setState(newState);};_this.saveModel=function(){console.log(\"save Net model!\");var modelObj=_this.makeModelObj();var modelJson=JSON.stringify(modelObj,null,2);var blob=new Blob([modelJson],{type:\"text/plain; charset=utf-8\"});var modelName=_this.state.name+\".json\";console.log(\"save Net model to: \"+modelName);saveAs(blob,modelName,true);// true = disable autoBOM\n};_this.handleNetChange=function(prop,e){console.log(\"a value change of \"+prop+e);var newState=Object.assign({},_this.state);console.log(\">>> param old value = \"+newState[prop]);newState[prop]=e.target.value;_this.setState(newState);e.preventDefault();};console.log(\"NetModel ctor\");_this.state={name:_this.props.name,desc:_this.props.desc,newNode:false,newNodeMsg:\"\",editMode:false,viewMode:false,expandMode:false,buildMode:true,newNodeId:\"\",errMsg:\"\"};return _this;}_createClass(NetModel,[{key:\"setError\",value:function setError(msg){console.log(\"**** setError:\"+msg);var newState=Object.assign({},this.state);newState.errMsg=msg;this.setState(newState);}},{key:\"makeModelObj\",value:function makeModelObj(){console.log(\"makeNetModel name:\"+this.state.name);var netHosts=this.props.netHosts;var netNodes=this.props.netNodes;var netHops=this.props.netHops;var model={};// user model built from current state\nmodel[\"netModelName\"]=this.state.name;model[\"netModelDesc\"]=this.state.desc;model[\"netHosts\"]={};model[\"netNodes\"]={};model[\"netHops\"]={};for(var hostKey in netHosts){var hostObj=netHosts[hostKey];var hostJson={hostName:hostKey,hostDesc:hostObj.hostDesc,ipAddrs:hostObj.ipAddrs};model[\"netHosts\"][hostKey]=hostJson;}for(var nodeKey in netNodes){var nodeObj=netNodes[nodeKey];var nodeJson={nodeName:nodeKey,nodeDesc:nodeObj.nodeDesc,nodeHost:nodeObj.nodeHost,nodeType:nodeObj.nodeType,endpointID:nodeObj.endpointID,services:nodeObj.services};model[\"netNodes\"][nodeKey]=nodeJson;}for(var hopKey in netHops){var hopObj=netHops[hopKey];var hopJson={hopName:hopKey,hopDesc:hopObj.hopDesc,fromNode:hopObj.fromNode,toNode:hopObj.toNode,bpLayer:hopObj.bpLayer,ltpLayer:hopObj.ltpLayer,maxRate:hopObj.maxRate,symmetric:hopObj.symmetric};model[\"netHops\"][hopKey]=hopJson;}return model;}},{key:\"checkNetModel\",value:// make list of errors in net model\nfunction checkNetModel(){var errors=[];// list of messages (strings)\nvar netHosts=this.props.netHosts;var netNodes=this.props.netNodes;var netHops=this.props.netHops;// do some sanity checking on net model\nif(!netHosts)// no host object?\nerrors.push(\"The Net Model has no Host list.\");if(!Object.keys(netHosts).length)// no hosts?\nerrors.push(\"The Net Model has no Hosts.\");if(!netNodes)// no node object?\nerrors.push(\"The Net Model has no Node list.\");if(!Object.keys(netNodes).length)// no nodes?\nerrors.push(\"The Net Model has no Nodes.\");for(var nodeKey in netNodes){var netNode=netNodes[nodeKey];var hostKey=netNode.nodeHost;console.log(\"**** hostKey =\"+hostKey);var hostObj=netHosts[hostKey];if(!hostObj)errors.push(\"Invalid hostKey for node \"+nodeKey+\".\");}// verify node keys of each hop\nfor(var hopKey in netHops){var netHop=netHops[hopKey];var fromNode=netNodes[netHop.fromNode];if(!fromNode)errors.push(\"Invalid fromNode for hop \"+hopKey+\".\");var toNode=netNodes[netHop.toNode];if(!toNode)errors.push(\"Invalid toNode for hop \"+hopKey+\".\");if(!netHop.bpLayer)errors.push(\"Invalid bpLayer for hop \"+hopKey+\".\");}return errors;}// if net model is okay, proceed with build\n},{key:\"makeIonModel\",value:function makeIonModel(){console.log(\"*******makeIonModel name:\"+this.state.name);var ion=this.props.getIonModel();if(ion){// existing ion model?\nthis.setError(\"Build stopped.  The ION Model \"+ion.name+\" already exists.\");return null;}var errs=this.checkNetModel();if(errs.length){console.log(\"*** net model errors:\"+errs);this.setError(\"Build ION Model stopped. \"+errs[0]);// 1st error is enough\nreturn null;}this.buildIonModel();this.setError(\"\");// might be a rerun, so clear any prior errors\nreturn null;}// build ion model\n},{key:\"buildIonModel\",value:function buildIonModel(){// translate the net model to a full ion model\n// using best-guess defaults\n// ion model objects\nvar ion={};var graphs={};var nodes={};var configs={};var commands={};var hosts={};var ipaddrs={};var clones={};// default values\nvar ionName=this.state.name+\"-ion\";var graphName=this.state.name+\"-graph\";var ionDesc=\"ION \"+this.state.desc;var graphDesc=\"ION \"+this.state.desc+\" Contacts\";var graphConfig=graphName+\".cg\";var nodeFeed=\"unix\";var nextNodeNum=1000;// starting next nodeNum \n// determine latest ion version\nvar ionVer=\"4.0.0\";var highKey=10;for(var verKey in ionVersions){if(verKey>highKey){ionVer=ionVersions[verKey].ionVersion;highKey=verKey;}}var netHosts=this.props.netHosts;var netNodes=this.props.netNodes;var netHops=this.props.netHops;var isStandardProtocol=this.props.isStandardProtocol;// build ion object\nion[\"name\"]=ionName;ion[\"desc\"]=ionDesc;ion[\"nextNodeNum\"]=nextNodeNum;// to be updated, depending on node defs\nion[\"currentContacts\"]=graphName;var nodeNum=nextNodeNum;// build ion hosts\nfor(var hostKey in netHosts){var netHost=netHosts[hostKey];hosts[hostKey]={\"id\":hostKey,\"name\":hostKey,\"desc\":netHost.hostDesc,\"linefeed\":nodeFeed,\"ipAddrKeys\":[]};var hostCmdKey=\"host_\"+hostKey;var hostClone={\"id\":hostCmdKey,\"typeKey\":\"host_hostkey\",\"values\":[hostKey]};var _cloneVal=this.props.makeCloneVal(hostKey,hostClone);clones[hostCmdKey]=_cloneVal;// build ion ipaddrs\nif(netHost.hasOwnProperty(\"ipAddrs\")){console.log(\"****** netHost has ipAddrs!! \"+hostKey);for(var _i=0;_i<netHost.ipAddrs.length;_i++){var addr=netHost.ipAddrs[_i];var uniqid=this.props.getUniqId();var ipAddrKey=\"ipAddr_\"+uniqid;ipaddrs[ipAddrKey]={\"id\":ipAddrKey,\"hostKey\":hostKey,\"ipAddr\":addr};hosts[hostKey].ipAddrKeys.push(ipAddrKey);var ipClone={\"id\":ipAddrKey,\"typeKey\":\"host_ipaddr\",\"values\":[addr]};_cloneVal=this.props.makeCloneVal(hostKey,ipClone);clones[ipAddrKey]=_cloneVal;}}// add the possible DNS entry, if no addrs provided\nif(hosts[hostKey].ipAddrKeys.length===0&&this.props.isGoodName(hostKey)){var _uniqid=this.props.getUniqId();var _ipAddrKey=\"ipAddr_\"+_uniqid;ipaddrs[_ipAddrKey]={\"id\":_ipAddrKey,\"hostKey\":hostKey,\"ipAddr\":hostKey};hosts[hostKey].ipAddrKeys.push(_ipAddrKey);var _ipClone={\"id\":_ipAddrKey,\"typeKey\":\"host_ipaddr\",\"values\":[hostKey]};_cloneVal=this.props.makeCloneVal(hostKey,_ipClone);clones[_ipAddrKey]=_cloneVal;};// end of DNS addr block\n};// end of netHost loop\nconsole.log(\"makeIonModel...  hosts:   \"+JSON.stringify(hosts));console.log(\"makeIonModel...  ipaddrs: \"+JSON.stringify(ipaddrs));console.log(\"makeIonModel...  clones:  \"+JSON.stringify(clones));// build ion nodes first, to establish all ion node numbers\nfor(var nodeKey in netNodes){var protocols=[];// init node protocols list\nvar _netNode=netNodes[nodeKey];nodeNum=nextNodeNum;// default\nif(_netNode.nodeType==='ion'&&_netNode.endpointID!==''){try{nodeNum=Number(_netNode.endpointID);}catch(err){nodeNum=nextNodeNum;}}if(nodeNum===nextNodeNum){// used nextNodeNum?\nnextNodeNum+=1;}if(nodeNum>nextNodeNum){// higher node num ceiling?\nnextNodeNum=nodeNum+1;}nodes[nodeKey]={\"id\":nodeKey,\"longName\":_netNode.nodeDesc,\"ionNodeNum\":nodeNum,\"ionVersion\":ionVer,\"hostKey\":_netNode.nodeHost,\"configKeys\":[]};// build nodenum & nodekey clone value\nvar numCmdKey=\"nodeNum_\"+nodeKey;var nodeClone={\"id\":numCmdKey,\"typeKey\":\"node_nodenum\",\"values\":[nodeNum.toString()]};var _cloneVal2=this.props.makeCloneVal(nodeKey,nodeClone);clones[numCmdKey]=_cloneVal2;};ion[\"nextNodeNum\"]=nextNodeNum;// update based on node loading\n// now build configs and (static) commands per node\n// ...hop-based commands must be done later\nfor(nodeKey in netNodes){var netNode=netNodes[nodeKey];var ionNode=nodes[nodeKey];nodeNum=ionNode.ionNodeNum;// build ionconfig \nvar configName=nodeKey+\".ionconfig\";configs[configName]={\"id\":configName,\"nodeKey\":nodeKey,\"configType\":\"ionconfig\",\"cmdKeys\":[]};nodes[nodeKey].configKeys.push(configName);var ionconfig=configName;// build ionconfig configFlags cmd\nvar vals=[\"13\"];var cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ionconfig\",\"configFlags\",vals);this.addCommandKey(configs,configName,cmdKey);// build ionrc \nconfigName=nodeKey+\".ionrc\";configs[configName]={\"id\":configName,\"nodeKey\":nodeKey,\"configType\":\"ionrc\",\"cmdKeys\":[]};nodes[nodeKey].configKeys.push(configName);// build ionrc initialize cmd\nvals=[nodeNum,ionconfig];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ionrc\",\"initialize\",vals);this.addCommandKey(configs,configName,cmdKey);// build ionrc start cmd\nvals=[];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ionrc\",\"start\",vals);this.addCommandKey(configs,configName,cmdKey);// build ipnrc \nconfigName=nodeKey+\".ipnrc\";//  var ipnrc = configName;  (only needed if building a \"r ipnadmin\")\nconfigs[configName]={\"id\":configName,\"nodeKey\":nodeKey,\"configType\":\"ipnrc\",\"cmdKeys\":[]};nodes[nodeKey].configKeys.push(configName);// build of plan cmds happens later with hop analysis\n// build bpv7rc \nconfigName=nodeKey+\".bpv7rc\";configs[configName]={\"id\":configName,\"nodeKey\":nodeKey,\"configType\":\"bpv7rc\",\"cmdKeys\":[]};nodes[nodeKey].configKeys.push(configName);// build bpv7rc initialize cmd\nvals=[];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"initialize\",vals);this.addCommandKey(configs,configName,cmdKey);// build bpv7rc scheme cmd\nvals=[\"ipn\",\"ipnfw\",\"ipnadminep\"];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"scheme\",vals);this.addCommandKey(configs,configName,cmdKey);// build bpv7rc \"low\" endpoint cmds  [0...6]\nfor(var i=0;i<7;i++){vals=[nodeNum,i,\"x\",\"\"];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);this.addCommandKey(configs,configName,cmdKey);}// provide endpoints per service\nvar services=netNode.services;for(i=0;i<services.length;i++){var aservice=services[i];if(aservice==='cfdp'){// CFDP: endpoints 64 & 65\nvals=[nodeNum,64,\"x\",\"\"];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);this.addCommandKey(configs,configName,cmdKey);vals=[nodeNum,65,\"x\",\"\"];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);this.addCommandKey(configs,configName,cmdKey);}if(aservice==='ams'){// AMS: endpoints 71 & 72\nvals=[nodeNum,71,\"x\",\"\"];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);this.addCommandKey(configs,configName,cmdKey);vals=[nodeNum,72,\"x\",\"\"];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);this.addCommandKey(configs,configName,cmdKey);}if(aservice==='amp'){// AMS: endpoints 101 & 102\nvals=[nodeNum,101,\"x\",\"\"];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);this.addCommandKey(configs,configName,cmdKey);vals=[nodeNum,102,\"x\",\"\"];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);this.addCommandKey(configs,configName,cmdKey);}}// build protocol list for the node\nfor(var hKey in netHops){var netHop=netHops[hKey];if(nodeKey===netHop.toNode||nodeKey===netHop.fromNode)if(!protocols.includes(netHop.bpLayer))protocols.push(netHop.bpLayer);}console.log(\"protocols: \"+JSON.stringify(protocols));// build protocol cmds\nfor(var _i2=0;_i2<protocols.length;_i2++){var prot=protocols[_i2];vals=[prot,1400,100,\"\"];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"protocol\",vals);this.addCommandKey(configs,configName,cmdKey);}// build of induct cmds happens later with hop analysis\n// build of outduct cmds happens later with hop analysis\n// build bpv7rc run ipnadmin cmd  (NOTE: not needed since included in our start script)\n// var cmd = \"ipnadmin \" + ipnrc;\n// vals = [cmd];\n// cmdKey = this.makeIonCommand(commands,clones,configName,\"bpv7rc\",\"run\",vals);\n// configs[configName].cmdKeys.push(cmdKey);\n// build ltprc (if needed)\nvar needLtp=protocols.includes(\"ltp\");if(needLtp){configName=nodeKey+\".ltprc\";configs[configName]={\"id\":configName,\"nodeKey\":nodeKey,\"configType\":\"ltprc\",\"cmdKeys\":[]};nodes[nodeKey].configKeys.push(configName);// build ltprc initialize cmd\nvals=[100];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"initialize\",vals);this.addCommandKey(configs,configName,cmdKey);// build of span cmds happens later with hop analysis\n// build of start link cmds happens later with hop analysis\n};//end of needLtp loop\n// build ionsecrc (now required to be present by ION)\nconfigName=nodeKey+\".ionsecrc\";configs[configName]={\"id\":configName,\"nodeKey\":nodeKey,\"configType\":\"ionsecrc\",\"cmdKeys\":[]};nodes[nodeKey].configKeys.push(configName);// build ionsecrc initialize command\nvals=[];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ionsecrc\",\"initialize\",vals);this.addCommandKey(configs,configName,cmdKey);};// end of nodes loop\n// build hop-related commands in two passes\n// ...this is necessary to ensure the inducts are all defined first \n// ...so that outducts can be connected properly in 2nd pass\n// build a set of one-way hops for convenience\nvar oneWays={};for(hKey in netHops){netHop=netHops[hKey];oneWays[hKey]=Object.assign({},netHop);if(netHop.symmetric){// symmetric implies a reverse hop also\nvar newKey=hKey+\"-2\";oneWays[newKey]=Object.assign({},netHop);var newWay=oneWays[newKey];newWay.id=newKey;newWay.fromNode=netHop.toNode;newWay.toNode=netHop.fromNode;}};for(hKey in oneWays){console.log(\"oneWay hop: \"+JSON.stringify(oneWays[hKey]));}// pass 1 - build inducts\n// var toNode;\nconsole.log(\"@@@@@ building inducts and links!\");var inductKeys={};// record inducts to avoid duplicate inducts per protocol\nvar startUdpKeys={};// hold ltp start udp commands for later (follows spans) per config\nvar startDccpKeys={};// hold ltp start dccp commands for later (follows spans) per config \nfor(hKey in oneWays){netHop=oneWays[hKey];console.log(\"processing hop: \"+JSON.stringify(netHop));var toNode=nodes[netHop.toNode];nodeKey=toNode.id;var bpLayer=netHop.bpLayer;var cli=bpLayer+\"cli\";var toNodeNum=toNode.ionNodeNum;var toHostKey=toNode.hostKey;var toAddr=toHostKey;// default, just in case\nvar toHost=netHosts[toHostKey];// same as ion hosts\nif(toHost.ipAddrs.length>0)toAddr=toHost.ipAddrs[0];var rate=netHop.maxRate;var induct=\"induct_\"+bpLayer;if(bpLayer===\"ltp\"||bpLayer===\"bssp\"){vals=[toNodeNum,cli];}else if(isStandardProtocol(bpLayer)){// the other protocols are port-based\nvar ports=this.getHostPorts(toHostKey,hosts,ipaddrs,commands);var nextPort=4556;while(ports.includes(nextPort)){nextPort++;}vals=[toAddr,nextPort,cli];}else{// non-standard protocol\ninduct=\"induct_any\";vals=[bpLayer,\"\",cli];}configName=nodeKey+\".bpv7rc\";var inKey=configName+bpLayer;if(!inductKeys.hasOwnProperty(inKey)){cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",induct,vals);this.addCommandKey(configs,configName,cmdKey);inductKeys[inKey]=cmdKey;// actual value not important, just know one exists\n}// build ltp links as necessary\nif(bpLayer===\"ltp\"){// link candidate?\nconfigName=nodeKey+\".ltprc\";toHostKey=toNode.hostKey;ports=this.getHostPorts(toHostKey,hosts,ipaddrs,commands);nextPort=1113;while(ports.includes(nextPort)){nextPort++;}var linkName=toHostKey+\":\"+nextPort;if(netHop.ltpLayer===\"udp\"){if(startUdpKeys.hasOwnProperty(configName))// already have start udp?\nbreak;// one is the limit\nvals=[toAddr,nextPort];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"start_udp\",vals);startUdpKeys[configName]=cmdKey;};if(netHop.ltpLayer===\"dccp\"){if(startDccpKeys.hasOwnProperty(configName))// already have start dccp?\nbreak;// one is the limit\nvals=[toAddr,nextPort];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"start_dccp\",vals);startDccpKeys[configName]=cmdKey;};};};console.log(\"$$$$$ startUdpKeys: \"+JSON.stringify(startUdpKeys));// pass 2 - build outducts\n// var toNode;\nconsole.log(\"@@@@@ building outducts and spans!\");for(hKey in oneWays){netHop=oneWays[hKey];console.log(\"processing hop: \"+JSON.stringify(netHop));var fromNode=nodes[netHop.fromNode];nodeKey=fromNode.id;toNode=nodes[netHop.toNode];rate=netHop.maxRate;bpLayer=netHop.bpLayer;var outduct=\"outduct_\"+bpLayer;var clo=bpLayer+\"clo\";if(bpLayer===\"ltp\"||bpLayer===\"bssp\"){toNodeNum=toNode.ionNodeNum;vals=[toNodeNum,clo,\"\"];//} else if (bpLayer === \"udp\") {   //old udp promiscuous mode\n//  vals = [\"udpclo\",\"\"]\n}else if(isStandardProtocol(bpLayer)){// assume valid induct name\nvar cloneVal=this.getNodeInduct(clones,toNode.id,bpLayer);console.log(\"???? cloneVal: \"+JSON.stringify(cloneVal));var inductName=cloneVal.value;vals=[inductName,clo,\"\"];}else{// won't know the induct name here\noutduct=\"outduct_any\";// use general format\nvals=[bpLayer,\"\",clo,\"\"];};configName=nodeKey+\".bpv7rc\";cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",outduct,vals);this.addCommandKey(configs,configName,cmdKey);//configs[configName].cmdKeys.push(cmdKey);\n// build ltp spans as necessary\nif(bpLayer===\"ltp\"){// link candidate?\nconfigName=nodeKey+\".ltprc\";toHostKey=toNode.hostKey;cloneVal=this.getNodeLink(clones,toNode.id,netHop.ltpLayer);console.log(\"???? cloneVal: \"+JSON.stringify(cloneVal));linkName=cloneVal.value;if(netHop.ltpLayer===\"udp\"){vals=[toNodeNum,100,100,64000,100000,1,linkName,1];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"span_udp\",vals);this.addCommandKey(configs,configName,cmdKey);};if(netHop.ltpLayer===\"dccp\"){vals=[toNodeNum,100,100,64000,100000,1,linkName,1];cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"span_dccp\",vals);this.addCommandKey(configs,configName,cmdKey);};};};// HACK Alert!  -- only now add the start commands, so span not ignored by ION\n//              -- see pass 1 for build of start commands\nfor(configName in startUdpKeys){this.addCommandKey(configs,configName,startUdpKeys[configName]);}for(configName in startDccpKeys){this.addCommandKey(configs,configName,startDccpKeys[configName]);}// pass 3 - build plan cmds\nfor(hKey in oneWays){netHop=oneWays[hKey];console.log(\"processing hop: \"+JSON.stringify(netHop));fromNode=nodes[netHop.fromNode];nodeKey=fromNode.id;toNode=nodes[netHop.toNode];toHostKey=toNode.hostKey;toAddr=toHostKey;// default, just in case\ntoHost=netHosts[toHostKey];// same as ion hosts\nif(toHost.ipAddrs.length>0)toAddr=toHost.ipAddrs[0];toNodeNum=toNode.ionNodeNum;rate=netHop.maxRate;bpLayer=netHop.bpLayer;var plan=\"plan_\"+bpLayer;// assume new plan format with rate parameter...ION supporting?\nif(bpLayer===\"ltp\"||bpLayer===\"bssp\"){vals=[toNodeNum,toNodeNum,rate];}else if(bpLayer===\"udp\"){//udp depends on induct\ncloneVal=this.getNodeInduct(clones,toNode.id,bpLayer);var outductName=cloneVal.value;vals=[toNodeNum,outductName,rate];}else if(isStandardProtocol(bpLayer)){cloneVal=this.getNodeOutduct(clones,nodeKey,toAddr,bpLayer);//console.log (\"???? cloneVal: \" + JSON.stringify(cloneVal));\noutductName=cloneVal.value;vals=[toNodeNum,outductName,rate];}else{plan=\"plan_any\";vals=[toNodeNum,\"\",rate];};configName=nodeKey+\".ipnrc\";cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"ipnrc\",plan,vals);this.addCommandKey(configs,configName,cmdKey);};// build bpv7rc start cmd, now that the duct cmds are done\nfor(nodeKey in netNodes){vals=[];configName=nodeKey+\".bpv7rc\";cmdKey=this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"start\",vals);this.addCommandKey(configs,configName,cmdKey);};console.log(\"makeIonModel...  nodes:   \"+JSON.stringify(nodes));console.log(\"makeIonModel...  clones:  \"+JSON.stringify(clones));// build ion contact graph\ngraphs[graphName]={\"id\":graphName,\"name\":graphName,\"desc\":graphDesc,\"ionVersion\":ionVer,\"configKey\":graphConfig};configs[graphConfig]={\"id\":graphConfig,\"nodeKey\":graphName,\"configType\":\"contacts\",\"cmdKeys\":[]};// build range and contact cmds\nvar maxSecs=50000000;var ranges={};for(hKey in oneWays){netHop=oneWays[hKey];rate=netHop.maxRate;fromNode=nodes[netHop.fromNode];var fromNodeNum=fromNode.ionNodeNum;toNode=nodes[netHop.toNode];toNodeNum=toNode.ionNodeNum;// range cmd   - build one per link...avoid implicit range for possible reverse link\nvals=[0,maxSecs,fromNodeNum,toNodeNum,1];cmdKey=this.makeIonCommand(commands,clones,graphName,configName,\"contacts\",\"range_rel_rel_time\",vals);ranges[hKey]=cmdKey;// save for later to group range commands\n// contact cmd\nvals=[0,maxSecs,fromNodeNum,toNodeNum,rate,1.0];cmdKey=this.makeIonCommand(commands,clones,graphName,configName,\"contacts\",\"contact_rel_rel_time\",vals);this.addCommandKey(configs,graphConfig,cmdKey);};// add range cmds as a group\nfor(hKey in ranges){cmdKey=ranges[hKey];this.addCommandKey(configs,graphConfig,cmdKey);};this.assignClones(commands,clones);//  map cloneVal to using clones (command params)\nvar tran={action:\"LOAD-ION-MODEL\",ionModel:ion,hosts:hosts,ipaddrs:ipaddrs,nodes:nodes,graphs:graphs,configs:configs,commands:commands,cloneValues:clones};this.props.dispatch(tran);var newState=Object.assign({},this.state);newState.buildMode=false;// just build once \nthis.setState(newState);return null;}},{key:\"addCommandKey\",value:// add commmand to a configuration, unless its null\nfunction addCommandKey(configs,configName,cmdKey){if(cmdKey==null){console.log(\"addCommandKey discarded for configFile: \"+configName);return;}configs[configName].cmdKeys.push(cmdKey);}// build an ion command object\n},{key:\"makeIonCommand\",value:function makeIonCommand(commands,clones,groupKey,configKey,configType,cmdName,values){// NOTE: the default behavior is to use the latest version of each command type\n// By convention, the latest command is simply the configType + cmdName\n// Prior command versions have _vxx suffix showing the last version supported\nvar cmdTypeKey=configType+\"_\"+cmdName;var uniqid=this.props.getUniqId();var cmdKey=\"cmd_\"+uniqid;var cmdType=cmdTypes[cmdTypeKey];console.log(\"makeIonCommand ... configType: \"+configType+\" groupKey: \"+groupKey+\" cmdName: \"+cmdName+\" cmdKey: \"+cmdKey+\" values: \"+values);if(cmdType===null)return null;// check for duplicate command & exit if dup exists\nfor(var cKey in commands){var cmd=commands[cKey];if(cmd.configKey===configKey){// matching config file?\nif(cmd.typeKey===cmdTypeKey){// matching command type\nvar match=true;for(var i=0;i<cmd.values.length;i++){if(cmd.values[i]!==values[i])match=false;}if(match){console.log(\"$$$$$$$ makeIonCommand duplicate command: \"+JSON.stringify(cmd));return null;}}// end cmdTypeKey check\n}// end configKey check\n}// end commands loop\nvar now=new Date();var tranTime=now.format(\"YYYY-MM-DDThh:mm\");commands[cmdKey]={\"id\":cmdKey,\"configKey\":configKey,\"typeKey\":cmdTypeKey,\"typeName\":cmdType.name,\"order\":cmdType.order,\"lastUpdate\":tranTime,\"values\":values};if(cmdType.isCloned){var cloneVal=this.props.makeCloneVal(groupKey,commands[cmdKey]);var cvKey=cloneVal.id;clones[cvKey]=cloneVal;}return cmdKey;}},{key:\"assignClones\",value:// build clone list for each new cloneVal  (a duplicate of the ionModelLoader function)\nfunction assignClones(commands,cloneValues){var findCloneVal=this.props.findCloneVal;// identify commands dependent on cloneValues\n// and push them on to the cloneValue list for update notifications\nconsole.log(\"=== Identify clones using cloneValues from the network model.\");for(var cmdKey in commands){var cmd=commands[cmdKey];var cmdTypeKey=cmd.typeKey;console.log(\"$$$ cmdKey: \"+cmdKey+\" has type: \"+cmdTypeKey);var cmdType=cmdTypes[cmd.typeKey];if(cmdType.copyClone||cmdType.pickClone){for(var i=0;i<cmdType.paramTypes.length;i++){var paramTypeKey=cmdType.paramTypes[i];var paramType=paramTypes[paramTypeKey];console.log(\"$$$ consider paramType \"+paramType.id+\" for cloning.\");if(paramType.copyClone||paramType.pickClone){var val=cmd.values[i];var type=paramType.valType;console.log(\"$$$ seeking clone value for type: \"+type+\" with value of \"+val);var cloneVal=findCloneVal(cloneValues,type,val);if(cloneVal){console.log(\"=== building clone.\");var clone={\"cmdKey\":cmdKey,\"valIdx\":i};console.log(\"$$$ created clone key: \"+JSON.stringify(clone));cloneVal.clones.push(clone);}}}}}}},{key:\"getHostPorts\",value:// get assigned ports of a host\nfunction getHostPorts(hostKey,hosts,ipaddrs,commands){var ports=[];var hostObj=hosts[hostKey];var ipAddrs=hostObj.ipAddrKeys;for(var i=0;i<ipAddrs.length;i++){var ipAddrKey=ipAddrs[i];var ipAddr=ipaddrs[ipAddrKey].ipAddr;for(var cmdKey in commands){var cmdObj=commands[cmdKey];if(cmdObj.typeKey.indexOf(\"induct\")>=0&&cmdObj.typeKey.indexOf(\"ltp\")<0||cmdObj.typeKey.indexOf(\"start_udp\")>=0||cmdObj.typeKey.indexOf(\"start_dccp\")>=0){//console.log( \"#### ipAddr: \" +ipAddr + \"  val[0]: \" + cmdObj.values[0]);\nif(cmdObj.values[0]===ipAddr)// correct ipAddr?\nports.push(cmdObj.values[1]);}}}console.log(\"host: \"+hostKey+\" ports: \"+ports.toString());return ports;}// find an Induct cloneValue based on nodeKey & type (bpLayer)\n},{key:\"getNodeInduct\",value:function getNodeInduct(cloneVals,nodeKey,bpLayer){var cloneType=bpLayer+\"Induct\";for(var key in cloneVals){var cloneVal=cloneVals[key];//console.log(\"$$$ checking cloneVal: \" + JSON.stringify(cloneVal));\nif(cloneVal.type===cloneType&&cloneVal.nodeKey===nodeKey){return cloneVal;}}console.log(\"!!! failed to get cloneVal for nodeKey: \"+nodeKey+\" cloneType: \"+cloneType);return\"\";}// find a Link cloneValue based on nodeKey & type (ltpLayer)\n},{key:\"getNodeLink\",value:function getNodeLink(cloneVals,nodeKey,ltpLayer){var cloneType=ltpLayer+\"Link\";for(var key in cloneVals){var cloneVal=cloneVals[key];//console.log(\"$$$ checking cloneVal: \" + JSON.stringify(cloneVal));\nif(cloneVal.type===cloneType&&cloneVal.nodeKey===nodeKey){return cloneVal;}}console.log(\"!!! failed to get cloneVal for nodeKey: \"+nodeKey+\" cloneType: \"+cloneType);return\"\";}// find an Outduct cloneValue based on nodeKey & toHostKey & type (bpLayer)\n},{key:\"getNodeOutduct\",value:function getNodeOutduct(cloneVals,nodeKey,toAddr,bpLayer){var cloneType=bpLayer+\"Outduct\";console.log(\"!!! seeking cloneVal for nodeKey: \"+nodeKey+\" toAddr: \"+toAddr+\" cloneType: \"+cloneType);for(var key in cloneVals){var cloneVal=cloneVals[key];//console.log(\"$$$ checking cloneVal: \" + JSON.stringify(cloneVal));\nif(cloneVal.type===cloneType&&cloneVal.nodeKey===nodeKey){if(cloneVal.value.indexOf(toAddr)>=0)return cloneVal;}}console.log(\"!!! failed to get cloneVal for nodeKey: \"+nodeKey+\" toAddr: \"+toAddr+\" cloneType: \"+cloneType);return\"\";}},{key:\"makeNetHostOptions\",value:function makeNetHostOptions(){var netHosts=this.props.netHosts;console.log(\"makeNetHostOptions \"+JSON.stringify(netHosts));var vals=[];var noneVal={\"value\":'??',\"label\":'None selected'};vals.push(noneVal);for(var hostKey in netHosts){var value=hostKey;var label=netHosts[hostKey].hostDesc;vals.push({\"value\":value,\"label\":label});}console.log(JSON.stringify(vals));var optionItems=this.props.mapOptionElems(vals);return optionItems;}},{key:\"makeNetNodeOptions\",value:function makeNetNodeOptions(){var netNodes=this.props.netNodes;console.log(\"makeNetNodeOptions \"+JSON.stringify(netNodes));var vals=[];var noneVal={\"value\":'??',\"label\":'None selected'};vals.push(noneVal);for(var nodeKey in netNodes){var value=nodeKey;var label=netNodes[nodeKey].nodeDesc;vals.push({\"value\":value,\"label\":label});}console.log(JSON.stringify(vals));var optionItems=this.props.mapOptionElems(vals);return optionItems;}},{key:\"makeAlertElem\",value:function makeAlertElem(msg){return/*#__PURE__*/_jsx(Alert,{bsStyle:\"danger\",children:/*#__PURE__*/_jsxs(\"b\",{children:[\"ERROR: \",msg]})});}},{key:\"makeHeadElem\",value:function makeHeadElem(cols){var colElems=cols.map(function(name,idx){return/*#__PURE__*/_jsx(\"th\",{children:name},idx);});var headElem=/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:colElems})},\"head\");return headElem;}},{key:\"makeRowElem\",value:function makeRowElem(rowKey,data){var dataElems=data.map(function(name,idx){return/*#__PURE__*/_jsx(\"td\",{children:name},idx);});var rowElem=/*#__PURE__*/_jsx(\"tr\",{children:dataElems},rowKey);return rowElem;}},{key:\"makeNetHostListElem\",value:function makeNetHostListElem(name){console.log(\"makeNetHostListElem\");var netHosts=this.props.netHosts;var netAddrs=this.props.netAddrs;var isGoodName=this.props.isGoodName;var isGoodNetHostKey=this.props.isGoodNetHostKey;var dispatch=this.props.dispatch;// make sure dispatch remembers \"this\"\nreturn/*#__PURE__*/_jsx(NetHostList,{// unique id\nname:name// user model - defaults to model name\n,netHosts:netHosts// list of Net Hosts\n,netAddrs:netAddrs// list of Net IP Addrs\n,isGoodName:isGoodName// verify name string is valid\n,isGoodNetHostKey:isGoodNetHostKey// verify hostKey not in use\n,dispatch:dispatch// dispatch func for new hosts\n},\"nethosts\");}},{key:\"makeNetNodeListElem\",value:function makeNetNodeListElem(name){console.log(\"makeNetNodeListElem\");var netNodes=this.props.netNodes;var isGoodName=this.props.isGoodName;var isGoodNetNodeKey=this.props.isGoodNetNodeKey;var makeOptions=this.props.makeTypeOptions;var makeOptElems=this.props.makeOptionElems;var makeNetHostOptions=this.makeNetHostOptions.bind(this);var dispatch=this.props.dispatch;// make sure dispatch remembers \"this\"\nreturn/*#__PURE__*/_jsx(NetNodeList,{// unique id\nname:name// user model - defaults to model name\n,netNodes:netNodes// list of Net Nodes\n,isGoodName:isGoodName// verify name string is valid\n,isGoodNetNodeKey:isGoodNetNodeKey// verify hostKey not in use\n,makeTypeOptions:makeOptions,makeOptionElems:makeOptElems,makeNetHostOptions:makeNetHostOptions// mak otpions list of host keys\n,dispatch:dispatch// dispatch func for new nodes\n},\"netnodes\");}},{key:\"makeNetHopListElem\",value:function makeNetHopListElem(name){console.log(\"makeNetHopListElem\");var netHops=this.props.netHops;var isGoodName=this.props.isGoodName;var isGoodNetHopKey=this.props.isGoodNetHopKey;var makeOptions=this.props.makeTypeOptions;var makeOptElems=this.props.makeOptionElems;var makeNetNodeOptions=this.makeNetNodeOptions.bind(this);var dispatch=this.props.dispatch;// make sure dispatch remembers \"this\"\nreturn/*#__PURE__*/_jsx(NetHopList,{// unique id\nname:name// user model - defaults to model name\n,netHops:netHops// list of Net Hops\n,isGoodName:isGoodName// verify name string is valid\n,isGoodNetHopKey:isGoodNetHopKey// verify hostKey not in use\n,makeTypeOptions:makeOptions,makeOptionElems:makeOptElems,makeNetNodeOptions:makeNetNodeOptions// make options list of node keys\n,dispatch:dispatch// dispatch func for new hosts\n},\"nethops\");}},{key:\"makeNetEditor\",value:function makeNetEditor(){//console.log(\">>makeModelElems \" + JSON.stringify(this.state));\nvar modelElems=[];var icon='remove';var head=/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{sm:4,children:/*#__PURE__*/_jsx(Label,{bsSize:\"lg\",bsStyle:\"default\",children:\"Net Model Editor\"})}),/*#__PURE__*/_jsx(Col,{sm:1,children:/*#__PURE__*/_jsx(Button,{bsSize:\"sm\",bsStyle:\"success\",onClick:this.noedit,children:/*#__PURE__*/_jsx(Glyphicon,{glyph:icon})})})]},\"head\");modelElems.push(head);var nameElem=this.makeModelElem(\"name\",\"text\",this.state.name,\"Net Model Name\",1,false,\"\");modelElems.push(nameElem);var descElem=this.makeModelElem(\"desc\",\"text\",this.state.desc,\"Description\",2,false,\"\");modelElems.push(descElem);return/*#__PURE__*/_jsx(\"div\",{children:modelElems});}},{key:\"makeNetViewer\",value:function makeNetViewer(){//console.log(\">>makeModelElems \" + JSON.stringify(this.state));\nvar modelElems=[];var head=/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{sm:2,children:[\" \",/*#__PURE__*/_jsx(Label,{bsSize:\"lg\",bsStyle:\"default\",children:\"Network Model Viewer\"})]})},\"head\");modelElems.push(head);var nameElem=this.makeModelElem(\"name\",\"text\",this.state.name,\"Network Model Name\",1,true,\"\");modelElems.push(nameElem);var descElem=this.makeModelElem(\"desc\",\"text\",this.state.desc,\"Description\",2,true,\"\");modelElems.push(descElem);return/*#__PURE__*/_jsx(\"div\",{children:modelElems});}},{key:\"makeModelElem\",value:function makeModelElem(prop,type,val,label,size,read,note){//console.log(\">>MakeModelElem \" + prop + ' ' + type + ' ' + val + ' ' + size);\nvar form=/*#__PURE__*/_jsx(FormControl,{readOnly:read,bsSize:\"sm\",type:type,value:val,onChange:this.handleNetChange.bind(null,prop)});return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{className:\"text-right\",sm:2,children:/*#__PURE__*/_jsx(\"b\",{children:label})}),/*#__PURE__*/_jsx(Col,{sm:size,value:val,children:form}),/*#__PURE__*/_jsx(Col,{sm:2,value:2,children:note})]},label);}},{key:\"render\",value:function render(){//console.log(\"NetModel render begin. state\" +JSON.stringify(this.state));\nconsole.log(\"NetModel render begin.\");// check for alert\nvar msg=this.state.errMsg;console.log(\"** errMsg =\"+msg);var alert=msg===\"\"?\"\":this.makeAlertElem(msg);var name=this.props.name;var editMode=this.state.editMode;var viewMode=this.state.viewMode;var expandMode=this.state.expandMode;var buildMode=this.state.buildMode;var editLabel=editMode?'Submit':'Edit';var viewLabel=viewMode?'Hide':'Show';var expandIcon=expandMode?'chevron-down':'chevron-right';var dimBuildIon=buildMode?false:true;var dimSaveNet=false;var hostList=expandMode?this.makeNetHostListElem(name):\"\";var nodeList=expandMode?this.makeNetNodeListElem(name):\"\";var hopList=expandMode?this.makeNetHopListElem(name):\"\";var viewPanel=null;if(viewMode)if(editMode)viewPanel=this.makeNetEditor();else viewPanel=this.makeNetViewer();console.log(\"NetModel render return next.\");return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(Col,{className:\"text-left\",sm:1,children:/*#__PURE__*/_jsx(Label,{bsSize:\"sm\",bsStyle:\"default\",children:\"Net Model\"})}),/*#__PURE__*/_jsx(Col,{className:\"text-right\",sm:1,children:/*#__PURE__*/_jsx(\"b\",{children:this.state.name})}),/*#__PURE__*/_jsx(Col,{className:\"text-left\",sm:2,children:this.state.desc}),/*#__PURE__*/_jsx(Col,{sm:6,children:/*#__PURE__*/_jsxs(ButtonToolbar,{children:[/*#__PURE__*/_jsx(Button,{bsSize:\"sm\",bsStyle:\"primary\",onClick:this.edit,children:editLabel}),/*#__PURE__*/_jsx(Button,{bsSize:\"sm\",bsStyle:\"info\",onClick:this.view,children:viewLabel}),/*#__PURE__*/_jsx(Button,{bsSize:\"sm\",bsStyle:\"primary\",disabled:dimBuildIon,onClick:this.makeIonModel.bind(this),children:\"Build ION Model\"}),/*#__PURE__*/_jsx(Button,{bsSize:\"sm\",bsStyle:\"primary\",disabled:dimSaveNet,onClick:this.saveModel,children:\"Save Model\"}),/*#__PURE__*/_jsxs(Button,{bsSize:\"sm\",bsStyle:\"success\",onClick:this.expand,children:[/*#__PURE__*/_jsx(Glyphicon,{glyph:expandIcon}),' ']})]})}),/*#__PURE__*/_jsx(Col,{sm:4,children:alert})]}),/*#__PURE__*/_jsx(Panel,{collapsible:true,expanded:viewMode,children:viewPanel}),/*#__PURE__*/_jsxs(Panel,{collapsible:true,expanded:expandMode,children:[hostList,nodeList,hopList]})]});}}]);return NetModel;}(React.Component);export{NetModel as default};","map":{"version":3,"names":["React","FormControl","Row","Col","Label","Button","ButtonToolbar","Panel","Glyphicon","saveAs","Alert","cmdTypes","paramTypes","ionVersions","NetHostList","NetNodeList","NetHopList","NetModel","props","expand","newState","Object","assign","state","expandMode","console","log","setState","edit","editMode","submit","viewMode","noedit","JSON","stringify","desc","netModel","name","tran","action","dispatch","view","saveModel","modelObj","makeModelObj","modelJson","blob","Blob","type","modelName","handleNetChange","prop","e","target","value","preventDefault","newNode","newNodeMsg","buildMode","newNodeId","errMsg","msg","netHosts","netNodes","netHops","model","hostKey","hostObj","hostJson","hostName","hostDesc","ipAddrs","nodeKey","nodeObj","nodeJson","nodeName","nodeDesc","nodeHost","nodeType","endpointID","services","hopKey","hopObj","hopJson","hopName","hopDesc","fromNode","toNode","bpLayer","ltpLayer","maxRate","symmetric","errors","push","keys","length","netNode","netHop","ion","getIonModel","setError","errs","checkNetModel","buildIonModel","graphs","nodes","configs","commands","hosts","ipaddrs","clones","ionName","graphName","ionDesc","graphDesc","graphConfig","nodeFeed","nextNodeNum","ionVer","highKey","verKey","ionVersion","isStandardProtocol","nodeNum","netHost","hostCmdKey","hostClone","cloneVal","makeCloneVal","hasOwnProperty","i","addr","uniqid","getUniqId","ipAddrKey","ipAddrKeys","ipClone","isGoodName","protocols","Number","err","numCmdKey","nodeClone","toString","ionNode","ionNodeNum","configName","configKeys","ionconfig","vals","cmdKey","makeIonCommand","addCommandKey","aservice","hKey","includes","prot","needLtp","oneWays","newKey","newWay","id","inductKeys","startUdpKeys","startDccpKeys","cli","toNodeNum","toHostKey","toAddr","toHost","rate","induct","ports","getHostPorts","nextPort","inKey","linkName","outduct","clo","getNodeInduct","inductName","getNodeLink","plan","outductName","getNodeOutduct","maxSecs","ranges","fromNodeNum","assignClones","ionModel","cloneValues","cmdKeys","groupKey","configKey","configType","cmdName","values","cmdTypeKey","cmdType","cKey","cmd","typeKey","match","now","Date","tranTime","format","order","isCloned","cvKey","findCloneVal","copyClone","pickClone","paramTypeKey","paramType","val","valType","clone","ipAddr","cmdObj","indexOf","cloneVals","cloneType","key","noneVal","label","optionItems","mapOptionElems","cols","colElems","map","idx","headElem","rowKey","data","dataElems","rowElem","netAddrs","isGoodNetHostKey","isGoodNetNodeKey","makeOptions","makeTypeOptions","makeOptElems","makeOptionElems","makeNetHostOptions","bind","isGoodNetHopKey","makeNetNodeOptions","modelElems","icon","head","nameElem","makeModelElem","descElem","size","read","note","form","alert","makeAlertElem","editLabel","viewLabel","expandIcon","dimBuildIon","dimSaveNet","hostList","makeNetHostListElem","nodeList","makeNetNodeListElem","hopList","makeNetHopListElem","viewPanel","makeNetEditor","makeNetViewer","makeIonModel","Component"],"sources":["/Users/rlborgen/git/ionconfig/editor/src/NetModel.jsx"],"sourcesContent":["//        NetModel.jsx     NetModel React Component\n//\n//        Copyright (c) 2018, California Institute of Technology.\n//        ALL RIGHTS RESERVED.  U.S. Government Sponsorship\n//        acknowledged.\n//                                                                   \n//      Author: Rick Borgen, Jet Propulsion Laboratory         \n//                                                               \nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormControl} from 'react-bootstrap';\nimport {Row,Col} from 'react-bootstrap';\nimport {Label,Button,ButtonToolbar} from 'react-bootstrap';\nimport {Panel} from 'react-bootstrap';\nimport {Glyphicon} from 'react-bootstrap';\nimport {saveAs} from \"file-saver\";\nimport {Alert} from 'react-bootstrap';\n\nimport cmdTypes     from './cmdTypes.json';\nimport paramTypes   from './paramTypes.json'\nimport ionVersions  from './ionVersions.json'\n\nimport NetHostList  from './NetHostList.jsx';\nimport NetNodeList  from './NetNodeList.jsx';\nimport NetHopList   from './NetHopList.jsx';\n\nexport default class NetModel  extends React.Component {\n\n  constructor (props) {\n    super(props);\n    // props\n    //  name\n    console.log(\"NetModel ctor\");\n    this.state = {\n      name: this.props.name,\n      desc: this.props.desc,\n\n      newNode: false,\n      newNodeMsg: \"\",\n      editMode: false,\n      viewMode: false,\n      expandMode: false,\n      buildMode: true,\n      newNodeId: \"\",\n\n      errMsg: \"\"\n    }\n  }\n  setError(msg) {\n    console.log(\"**** setError:\"+ msg);\n    var newState = Object.assign({},this.state);\n    newState.errMsg = msg;\n    this.setState (newState);\n  };\n  makeModelObj() {\n    console.log(\"makeNetModel name:\" + this.state.name);\n\n    const netHosts = this.props.netHosts;\n    const netNodes = this.props.netNodes;\n    const netHops = this.props.netHops;\n    var model = {};    // user model built from current state\n\n    model[\"netModelName\"] = this.state.name;\n    model[\"netModelDesc\"] = this.state.desc;\n    model[\"netHosts\"] = {};\n    model[\"netNodes\"] = {};\n    model[\"netHops\"]  = {};\n\n    for (var hostKey in netHosts) {\n      const hostObj = netHosts[hostKey];\n      var hostJson = {\n        hostName: hostKey,\n        hostDesc: hostObj.hostDesc,\n        ipAddrs: hostObj.ipAddrs\n      }\n      model[\"netHosts\"][hostKey] = hostJson;\n    }\n    for (var nodeKey in netNodes) {\n      const nodeObj = netNodes[nodeKey];\n      var nodeJson = {\n        nodeName: nodeKey,\n        nodeDesc: nodeObj.nodeDesc,\n        nodeHost: nodeObj.nodeHost,\n        nodeType: nodeObj.nodeType,\n        endpointID: nodeObj.endpointID,\n        services: nodeObj.services\n      }\n      model[\"netNodes\"][nodeKey] = nodeJson;\n    }\n    for (var hopKey in netHops) {\n      const hopObj = netHops[hopKey];\n      var hopJson = {\n        hopName: hopKey,\n        hopDesc: hopObj.hopDesc,\n        fromNode: hopObj.fromNode,\n        toNode: hopObj.toNode,\n        bpLayer: hopObj.bpLayer,\n        ltpLayer: hopObj.ltpLayer,\n        maxRate: hopObj.maxRate,\n        symmetric: hopObj.symmetric\n      }\n      model[\"netHops\"][hopKey] = hopJson\n    }\n    return model;\n  };\n  // make list of errors in net model\n  checkNetModel() {\n    var errors = [];   // list of messages (strings)\n    const netHosts = this.props.netHosts;\n    const netNodes = this.props.netNodes;\n    const netHops  = this.props.netHops;\n\n    // do some sanity checking on net model\n    if (!netHosts)  // no host object?\n      errors.push(\"The Net Model has no Host list.\")\n    if (!Object.keys(netHosts).length)   // no hosts?\n      errors.push(\"The Net Model has no Hosts.\");\n    if (!netNodes)  // no node object?\n      errors.push(\"The Net Model has no Node list.\");\n    if (!Object.keys(netNodes).length)   // no nodes?\n      errors.push(\"The Net Model has no Nodes.\");\n    for (var nodeKey in netNodes) {\n      var netNode = netNodes[nodeKey];\n      var hostKey = netNode.nodeHost;\n      console.log(\"**** hostKey =\" + hostKey);\n      var hostObj = netHosts[hostKey];\n      if (!hostObj)\n        errors.push(\"Invalid hostKey for node \" + nodeKey + \".\");\n    }\n    // verify node keys of each hop\n    for (var hopKey in netHops) {\n      var netHop = netHops[hopKey];\n      var fromNode = netNodes[netHop.fromNode];\n      if (!fromNode) \n        errors.push(\"Invalid fromNode for hop \" + hopKey + \".\");\n      var toNode = netNodes[netHop.toNode];\n      if (!toNode) \n        errors.push(\"Invalid toNode for hop \" + hopKey + \".\");\n      if (!netHop.bpLayer)\n        errors.push(\"Invalid bpLayer for hop \" + hopKey + \".\");\n    }\n    return errors;\n  }\n  // if net model is okay, proceed with build\n  makeIonModel() {\n    console.log(\"*******makeIonModel name:\" + this.state.name);\n    var ion = this.props.getIonModel();\n    if (ion) {  // existing ion model?\n      this.setError(\"Build stopped.  The ION Model \" + ion.name + \" already exists.\");\n      return null;\n    }\n    var errs = this.checkNetModel();\n    if (errs.length) {\n      console.log(\"*** net model errors:\" + errs);\n      this.setError(\"Build ION Model stopped. \" + errs[0]);  // 1st error is enough\n      return null;\n    }\n    this.buildIonModel();\n    this.setError(\"\");   // might be a rerun, so clear any prior errors\n    return null;\n  }\n  // build ion model\n  buildIonModel() {\n    // translate the net model to a full ion model\n    // using best-guess defaults\n\n    // ion model objects\n    var ion = {};\n    var graphs = {};\n    var nodes = {};\n    var configs = {};\n    var commands = {};\n    var hosts = {};\n    var ipaddrs = {};\n    var clones = {}\n\n    // default values\n    const ionName   = this.state.name + \"-ion\";\n    const graphName = this.state.name + \"-graph\";\n    const ionDesc   = \"ION \" + this.state.desc;\n    const graphDesc = \"ION \" + this.state.desc + \" Contacts\";\n    const graphConfig = graphName + \".cg\";\n    const nodeFeed  = \"unix\";\n    var   nextNodeNum   = 1000;        // starting next nodeNum \n    // determine latest ion version\n    var ionVer    = \"4.0.0\";\n    var highKey   = 10;\n    for (var verKey in ionVersions) {\n      if (verKey > highKey) {\n        ionVer = ionVersions[verKey].ionVersion;\n        highKey = verKey;\n      } \n    }\n\n    const netHosts = this.props.netHosts;\n    const netNodes = this.props.netNodes;\n    const netHops  = this.props.netHops;\n\n    const isStandardProtocol = this.props.isStandardProtocol;\n\n    // build ion object\n    ion[\"name\"] = ionName;\n    ion[\"desc\"] = ionDesc;\n    ion[\"nextNodeNum\"] = nextNodeNum;    // to be updated, depending on node defs\n    ion[\"currentContacts\"] = graphName;\n    var nodeNum = nextNodeNum;\n\n    // build ion hosts\n    for (var hostKey in netHosts) {\n      let netHost = netHosts[hostKey];\n      hosts[hostKey] = { \n        \"id\" : hostKey, \n        \"name\" : hostKey, \n        \"desc\" : netHost.hostDesc, \n        \"linefeed\" : nodeFeed,\n        \"ipAddrKeys\" : []\n      };\n      let hostCmdKey = \"host_\" + hostKey;\n      let hostClone = { \"id\": hostCmdKey, \"typeKey\": \"host_hostkey\", \"values\":[ hostKey ] };\n      let cloneVal = this.props.makeCloneVal(hostKey,hostClone);\n      clones[hostCmdKey] = cloneVal;\n\n      // build ion ipaddrs\n      if (netHost.hasOwnProperty(\"ipAddrs\")) {\n        console.log(\"****** netHost has ipAddrs!! \" + hostKey);\n        for (let i = 0; i < netHost.ipAddrs.length; i++) {\n          let addr = netHost.ipAddrs[i];\n          let uniqid = this.props.getUniqId();\n          let ipAddrKey = \"ipAddr_\" + uniqid;\n          ipaddrs[ipAddrKey] = {\n            \"id\" : ipAddrKey,\n            \"hostKey\" : hostKey,\n            \"ipAddr\" : addr\n          };\n          hosts[hostKey].ipAddrKeys.push(ipAddrKey);\n\n          let ipClone = { \"id\": ipAddrKey, \"typeKey\": \"host_ipaddr\", \"values\":[ addr ] };\n          cloneVal = this.props.makeCloneVal(hostKey,ipClone);\n          clones[ipAddrKey] = cloneVal;\n        }\n      }\n      // add the possible DNS entry, if no addrs provided\n      if (hosts[hostKey].ipAddrKeys.length === 0 && this.props.isGoodName(hostKey)) {\n        let uniqid = this.props.getUniqId();\n        let ipAddrKey = \"ipAddr_\" + uniqid;\n        ipaddrs[ipAddrKey] = {\n          \"id\" : ipAddrKey,\n          \"hostKey\" : hostKey,\n          \"ipAddr\" : hostKey\n        };\n        hosts[hostKey].ipAddrKeys.push(ipAddrKey);\n\n        let ipClone = { \"id\": ipAddrKey, \"typeKey\": \"host_ipaddr\", \"values\":[ hostKey ] };\n        cloneVal = this.props.makeCloneVal(hostKey,ipClone);\n        clones[ipAddrKey] = cloneVal;\n      }; // end of DNS addr block\n    };   // end of netHost loop\n    console.log(\"makeIonModel...  hosts:   \" + JSON.stringify(hosts));\n    console.log(\"makeIonModel...  ipaddrs: \" + JSON.stringify(ipaddrs));\n    console.log(\"makeIonModel...  clones:  \" + JSON.stringify(clones));\n\n    // build ion nodes first, to establish all ion node numbers\n    for (var nodeKey in netNodes) {\n      var protocols = [];  // init node protocols list\n      let netNode = netNodes[nodeKey];\n      nodeNum = nextNodeNum;   // default\n      if (netNode.nodeType === 'ion' && netNode.endpointID !== '') {\n        try {\n          nodeNum = Number(netNode.endpointID);\n        }\n        catch (err) {\n          nodeNum= nextNodeNum;\n        }\n      }\n      if (nodeNum === nextNodeNum) {  // used nextNodeNum?\n        nextNodeNum += 1;\n      }\n      if (nodeNum > nextNodeNum) {    // higher node num ceiling?\n        nextNodeNum = nodeNum + 1;\n      }\n      nodes[nodeKey] = {\n        \"id\" : nodeKey, \n        \"longName\" : netNode.nodeDesc, \n        \"ionNodeNum\" : nodeNum,\n        \"ionVersion\" : ionVer,\n        \"hostKey\" : netNode.nodeHost,\n        \"configKeys\" : []\n      };\n      // build nodenum & nodekey clone value\n      let numCmdKey = \"nodeNum_\" + nodeKey;\n      let nodeClone = { \"id\": numCmdKey, \"typeKey\": \"node_nodenum\", \"values\":[ nodeNum.toString() ] };\n      let cloneVal = this.props.makeCloneVal(nodeKey,nodeClone);\n      clones[numCmdKey] = cloneVal;\n    };\n    ion[\"nextNodeNum\"] = nextNodeNum;   // update based on node loading\n    // now build configs and (static) commands per node\n    // ...hop-based commands must be done later\n    for (nodeKey in netNodes) {\n      var netNode = netNodes[nodeKey];\n      var ionNode = nodes[nodeKey];\n      nodeNum = ionNode.ionNodeNum;\n      // build ionconfig \n      var configName = nodeKey + \".ionconfig\";\n      configs[configName] = {\n        \"id\" : configName,\n        \"nodeKey\": nodeKey,\n        \"configType\" : \"ionconfig\",\n        \"cmdKeys\" : [] \n      };\n      nodes[nodeKey].configKeys.push(configName);\n      var ionconfig = configName;\n      // build ionconfig configFlags cmd\n      var vals = [\"13\"];\n      var cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ionconfig\",\"configFlags\",vals);\n      this.addCommandKey(configs,configName,cmdKey);\n      // build ionrc \n      configName = nodeKey + \".ionrc\";\n      configs[configName] = {\n        \"id\" : configName,\n        \"nodeKey\": nodeKey,\n        \"configType\" : \"ionrc\",\n        \"cmdKeys\" : [] \n      };\n      nodes[nodeKey].configKeys.push(configName);\n      // build ionrc initialize cmd\n      vals = [nodeNum,ionconfig];\n      cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ionrc\",\"initialize\",vals);\n      this.addCommandKey(configs,configName,cmdKey);\n      // build ionrc start cmd\n      vals = [];\n      cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ionrc\",\"start\",vals);\n      this.addCommandKey(configs,configName,cmdKey);\n      // build ipnrc \n      configName = nodeKey + \".ipnrc\";\n      //  var ipnrc = configName;  (only needed if building a \"r ipnadmin\")\n      configs[configName] = {\n        \"id\" : configName,\n        \"nodeKey\": nodeKey,\n        \"configType\" : \"ipnrc\",\n        \"cmdKeys\" : [] \n      };\n      nodes[nodeKey].configKeys.push(configName);\n\n      // build of plan cmds happens later with hop analysis\n\n      // build bpv7rc \n      configName = nodeKey + \".bpv7rc\";\n      configs[configName] = {\n        \"id\" : configName,\n        \"nodeKey\": nodeKey,\n        \"configType\" : \"bpv7rc\",\n        \"cmdKeys\" : [] \n      };\n      nodes[nodeKey].configKeys.push(configName);\n      // build bpv7rc initialize cmd\n      vals = [];\n      cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"initialize\",vals);\n      this.addCommandKey(configs,configName,cmdKey);\n      // build bpv7rc scheme cmd\n      vals = [\"ipn\",\"ipnfw\",\"ipnadminep\"];\n      cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"scheme\",vals);\n      this.addCommandKey(configs,configName,cmdKey);\n      // build bpv7rc \"low\" endpoint cmds  [0...6]\n      for (var i=0; i<7; i++) {\n        vals = [nodeNum,i,\"x\",\"\"];\n        cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);\n        this.addCommandKey(configs,configName,cmdKey);\n      }\n      // provide endpoints per service\n      const services = netNode.services;\n      for (i=0; i<services.length; i++) {\n        var aservice = services[i];\n        if (aservice === 'cfdp') {   // CFDP: endpoints 64 & 65\n          vals = [nodeNum,64,\"x\",\"\"];\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);\n          this.addCommandKey(configs,configName,cmdKey);\n          vals = [nodeNum,65,\"x\",\"\"];\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);\n          this.addCommandKey(configs,configName,cmdKey);\n        }\n        if (aservice === 'ams') {   // AMS: endpoints 71 & 72\n          vals = [nodeNum,71,\"x\",\"\"];\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);\n          this.addCommandKey(configs,configName,cmdKey);\n          vals = [nodeNum,72,\"x\",\"\"];\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);\n          this.addCommandKey(configs,configName,cmdKey);\n        }\n        if (aservice === 'amp') {   // AMS: endpoints 101 & 102\n          vals = [nodeNum,101,\"x\",\"\"];\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);\n          this.addCommandKey(configs,configName,cmdKey);\n          vals = [nodeNum,102,\"x\",\"\"];\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"endpoint\",vals);\n          this.addCommandKey(configs,configName,cmdKey);\n        }\n      }\n      // build protocol list for the node\n      for (var hKey in netHops) {\n        var netHop = netHops[hKey];\n        if(nodeKey === netHop.toNode || nodeKey === netHop.fromNode)\n          if(!protocols.includes(netHop.bpLayer))\n            protocols.push(netHop.bpLayer);\n      }\n      console.log(\"protocols: \" + JSON.stringify(protocols));\n       // build protocol cmds\n      for (let i=0; i<protocols.length; i++) {\n        var prot = protocols[i];\n        vals = [prot,1400,100,\"\"];\n        cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"protocol\",vals);\n        this.addCommandKey(configs,configName,cmdKey);\n      }\n      // build of induct cmds happens later with hop analysis\n\n      // build of outduct cmds happens later with hop analysis\n\n      // build bpv7rc run ipnadmin cmd  (NOTE: not needed since included in our start script)\n      // var cmd = \"ipnadmin \" + ipnrc;\n      // vals = [cmd];\n      // cmdKey = this.makeIonCommand(commands,clones,configName,\"bpv7rc\",\"run\",vals);\n      // configs[configName].cmdKeys.push(cmdKey);\n\n      // build ltprc (if needed)\n      var needLtp = protocols.includes(\"ltp\");\n      if (needLtp) {\n        configName = nodeKey + \".ltprc\";\n        configs[configName] = {\n          \"id\" : configName,\n          \"nodeKey\": nodeKey,\n          \"configType\" : \"ltprc\",\n          \"cmdKeys\" : [] \n        };\n        nodes[nodeKey].configKeys.push(configName);\n\n        // build ltprc initialize cmd\n        vals = [100];\n        cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"initialize\",vals);\n        this.addCommandKey(configs,configName,cmdKey);\n\n        // build of span cmds happens later with hop analysis\n\n        // build of start link cmds happens later with hop analysis\n\n      };  //end of needLtp loop\n      // build ionsecrc (now required to be present by ION)\n      configName = nodeKey + \".ionsecrc\";\n      configs[configName] = {\n        \"id\" : configName,\n        \"nodeKey\": nodeKey,\n        \"configType\" : \"ionsecrc\",\n        \"cmdKeys\" : []\n      };\n      nodes[nodeKey].configKeys.push(configName);\n      // build ionsecrc initialize command\n      vals = [];\n      cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ionsecrc\",\"initialize\",vals);\n      this.addCommandKey(configs,configName,cmdKey);\n\n    };  // end of nodes loop\n\n    // build hop-related commands in two passes\n    // ...this is necessary to ensure the inducts are all defined first \n    // ...so that outducts can be connected properly in 2nd pass\n\n    // build a set of one-way hops for convenience\n    var oneWays = {};\n    for (hKey in netHops) {\n      netHop = netHops[hKey];\n      oneWays[hKey] = Object.assign({},netHop);\n      if (netHop.symmetric) {  // symmetric implies a reverse hop also\n        var newKey = hKey + \"-2\";\n        oneWays[newKey] = Object.assign({},netHop);\n        var newWay = oneWays[newKey];\n        newWay.id = newKey;\n        newWay.fromNode = netHop.toNode;\n        newWay.toNode = netHop.fromNode;\n      }\n    };\n    for (hKey in oneWays )\n       console.log(\"oneWay hop: \" + JSON.stringify(oneWays[hKey]) );\n\n    // pass 1 - build inducts\n    // var toNode;\n    console.log(\"@@@@@ building inducts and links!\");\n    var inductKeys = {};     // record inducts to avoid duplicate inducts per protocol\n    var startUdpKeys = {};   // hold ltp start udp commands for later (follows spans) per config\n    var startDccpKeys = {};  // hold ltp start dccp commands for later (follows spans) per config \n    for (hKey in oneWays) {\n      netHop = oneWays[hKey];\n      console.log(\"processing hop: \" + JSON.stringify(netHop));\n      var toNode = nodes[netHop.toNode];\n      nodeKey = toNode.id;\n      var bpLayer = netHop.bpLayer;\n      var cli = bpLayer + \"cli\";\n      var toNodeNum = toNode.ionNodeNum;\n      var toHostKey = toNode.hostKey;\n      var toAddr = toHostKey;            // default, just in case\n      var toHost = netHosts[toHostKey];  // same as ion hosts\n      if (toHost.ipAddrs.length > 0)\n        toAddr = toHost.ipAddrs[0];\n      var rate = netHop.maxRate;\n      var induct = \"induct_\" + bpLayer;\n      if (bpLayer === \"ltp\" ||\n          bpLayer === \"bssp\") {\n        vals = [toNodeNum,cli]\n      } else \n      if (isStandardProtocol(bpLayer)) {  // the other protocols are port-based\n        var ports = this.getHostPorts(toHostKey,hosts,ipaddrs,commands);\n        var nextPort = 4556;\n        while (ports.includes(nextPort))\n          nextPort++;\n        vals = [toAddr,nextPort,cli];\n      } else {   // non-standard protocol\n        induct = \"induct_any\";\n        vals = [bpLayer, \"\", cli];\n      }\n      configName = nodeKey + \".bpv7rc\";\n      var inKey = configName + bpLayer;\n      if(!inductKeys.hasOwnProperty(inKey)) {\n        cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",induct,vals);\n        this.addCommandKey(configs,configName,cmdKey);\n        inductKeys[inKey] = cmdKey;   // actual value not important, just know one exists\n      }\n      // build ltp links as necessary\n      if (bpLayer === \"ltp\") {    // link candidate?\n        configName = nodeKey + \".ltprc\";\n        toHostKey = toNode.hostKey;\n        ports = this.getHostPorts(toHostKey,hosts,ipaddrs,commands);\n        nextPort = 1113;\n        while (ports.includes(nextPort))\n          nextPort++;\n        var linkName  = toHostKey + \":\" + nextPort;\n        if (netHop.ltpLayer === \"udp\") {\n          if (startUdpKeys.hasOwnProperty(configName) )  // already have start udp?\n            break;                                       // one is the limit\n          vals = [toAddr,nextPort];\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"start_udp\",vals);\n          startUdpKeys[configName] = cmdKey;\n        };\n        if (netHop.ltpLayer === \"dccp\") {\n          if (startDccpKeys.hasOwnProperty(configName) )  // already have start dccp?\n            break;                                        // one is the limit\n          vals = [toAddr,nextPort];\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"start_dccp\",vals);\n          startDccpKeys[configName] = cmdKey;\n        };\n      };\n    };\n    console.log(\"$$$$$ startUdpKeys: \" + JSON.stringify(startUdpKeys) );\n    // pass 2 - build outducts\n    // var toNode;\n    console.log(\"@@@@@ building outducts and spans!\");\n    for (hKey in oneWays) {\n      netHop = oneWays[hKey];\n      console.log(\"processing hop: \" + JSON.stringify(netHop));\n      var fromNode = nodes[netHop.fromNode];\n      nodeKey = fromNode.id;\n      toNode = nodes[netHop.toNode];\n      rate = netHop.maxRate;\n      bpLayer = netHop.bpLayer;\n      var outduct = \"outduct_\" + bpLayer;\n      var clo = bpLayer + \"clo\";\n      if (bpLayer === \"ltp\" ||\n          bpLayer === \"bssp\") {\n        toNodeNum = toNode.ionNodeNum;\n        vals = [toNodeNum,clo,\"\"]\n      //} else if (bpLayer === \"udp\") {   //old udp promiscuous mode\n      //  vals = [\"udpclo\",\"\"]\n      } else \n      if (isStandardProtocol(bpLayer)) {   // assume valid induct name\n        var cloneVal = this.getNodeInduct(clones,toNode.id,bpLayer);\n        console.log (\"???? cloneVal: \" + JSON.stringify(cloneVal));\n        var inductName = cloneVal.value;\n        vals = [inductName,clo,\"\"];\n      } else {                       // won't know the induct name here\n        outduct = \"outduct_any\";     // use general format\n        vals = [bpLayer,\"\",clo,\"\"];\n      };\n      configName = nodeKey + \".bpv7rc\";\n      cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",outduct,vals);\n      this.addCommandKey(configs,configName,cmdKey);\n      //configs[configName].cmdKeys.push(cmdKey);\n      // build ltp spans as necessary\n      if (bpLayer === \"ltp\") {    // link candidate?\n        configName = nodeKey + \".ltprc\";\n        toHostKey = toNode.hostKey;\n        cloneVal = this.getNodeLink(clones,toNode.id,netHop.ltpLayer);\n        console.log (\"???? cloneVal: \" + JSON.stringify(cloneVal));\n        linkName = cloneVal.value;\n        if (netHop.ltpLayer === \"udp\") {\n          vals = [toNodeNum,100,100,64000,100000,1,linkName,1]\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"span_udp\",vals);\n          this.addCommandKey(configs,configName,cmdKey);\n        };\n        if (netHop.ltpLayer === \"dccp\") {\n          vals = [toNodeNum,100,100,64000,100000,1,linkName,1]\n          cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ltprc\",\"span_dccp\",vals);\n          this.addCommandKey(configs,configName,cmdKey);\n        };\n      };\n    };\n    // HACK Alert!  -- only now add the start commands, so span not ignored by ION\n    //              -- see pass 1 for build of start commands\n    for (configName in startUdpKeys)\n      this.addCommandKey(configs,configName,startUdpKeys[configName]);\n    for (configName in startDccpKeys)\n      this.addCommandKey(configs,configName,startDccpKeys[configName]);\n\n    // pass 3 - build plan cmds\n    for (hKey in oneWays) {\n      netHop = oneWays[hKey];\n      console.log(\"processing hop: \" + JSON.stringify(netHop));\n      fromNode = nodes[netHop.fromNode];\n      nodeKey = fromNode.id;\n      toNode = nodes[netHop.toNode]\n      toHostKey = toNode.hostKey;\n      toAddr = toHostKey;            // default, just in case\n      toHost = netHosts[toHostKey];  // same as ion hosts\n      if (toHost.ipAddrs.length > 0)\n        toAddr = toHost.ipAddrs[0];\n      toNodeNum = toNode.ionNodeNum;\n      rate = netHop.maxRate;\n      bpLayer = netHop.bpLayer;\n      var plan = \"plan_\" + bpLayer;\n      // assume new plan format with rate parameter...ION supporting?\n      if (bpLayer === \"ltp\" ||\n          bpLayer === \"bssp\") {\n        vals = [toNodeNum,toNodeNum,rate];\n      } else \n      if (bpLayer === \"udp\") {   //udp depends on induct\n        cloneVal = this.getNodeInduct(clones,toNode.id,bpLayer);\n        var outductName = cloneVal.value;\n        vals = [toNodeNum,outductName,rate];\n      } else \n      if (isStandardProtocol(bpLayer)) {\n        cloneVal = this.getNodeOutduct(clones,nodeKey,toAddr,bpLayer);\n        //console.log (\"???? cloneVal: \" + JSON.stringify(cloneVal));\n        outductName = cloneVal.value;\n        vals = [toNodeNum,outductName,rate];\n      } else {\n        plan = \"plan_any\";\n        vals = [toNodeNum,\"\",rate];\n      };\n      configName = nodeKey + \".ipnrc\";\n      cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"ipnrc\",plan,vals);\n      this.addCommandKey(configs,configName,cmdKey);\n    };\n\n    // build bpv7rc start cmd, now that the duct cmds are done\n    for (nodeKey in netNodes) {\n      vals = [];\n      configName = nodeKey + \".bpv7rc\";\n      cmdKey = this.makeIonCommand(commands,clones,nodeKey,configName,\"bpv7rc\",\"start\",vals);\n      this.addCommandKey(configs,configName,cmdKey);\n    };\n    console.log(\"makeIonModel...  nodes:   \" + JSON.stringify(nodes));\n    console.log(\"makeIonModel...  clones:  \" + JSON.stringify(clones));\n\n    // build ion contact graph\n    graphs[graphName] = { \n      \"id\"   : graphName, \n      \"name\" : graphName, \n      \"desc\" : graphDesc,\n      \"ionVersion\" :ionVer,\n      \"configKey\" : graphConfig\n    };\n    configs[graphConfig] = {\n      \"id\" : graphConfig,\n      \"nodeKey\": graphName,\n      \"configType\" : \"contacts\",\n      \"cmdKeys\" : [] \n    };\n    // build range and contact cmds\n    var maxSecs = 50000000;\n    var ranges = {};\n    for (hKey in oneWays) {\n      netHop = oneWays[hKey];\n      rate = netHop.maxRate;\n      fromNode = nodes[netHop.fromNode];\n      var fromNodeNum = fromNode.ionNodeNum;\n      toNode = nodes[netHop.toNode];\n      toNodeNum = toNode.ionNodeNum;\n\n      // range cmd   - build one per link...avoid implicit range for possible reverse link\n      vals = [0,maxSecs,fromNodeNum,toNodeNum,1];\n      cmdKey = this.makeIonCommand(commands,clones,graphName,configName,\"contacts\",\"range_rel_rel_time\",vals);\n      ranges[hKey] = cmdKey;   // save for later to group range commands\n      // contact cmd\n      vals = [0,maxSecs,fromNodeNum,toNodeNum,rate,1.0];\n      cmdKey = this.makeIonCommand(commands,clones,graphName,configName,\"contacts\",\"contact_rel_rel_time\",vals);\n      this.addCommandKey(configs,graphConfig,cmdKey);\n    };\n    // add range cmds as a group\n    for (hKey in ranges) {\n      cmdKey = ranges[hKey];\n      this.addCommandKey(configs,graphConfig,cmdKey);\n    };\n    this.assignClones(commands,clones);   //  map cloneVal to using clones (command params)\n\n    var tran = {\n      action: \"LOAD-ION-MODEL\",\n      ionModel: ion,\n      hosts: hosts,\n      ipaddrs:ipaddrs,\n      nodes: nodes,\n      graphs: graphs,\n      configs: configs,\n      commands: commands,\n      cloneValues: clones\n    };\n    this.props.dispatch(tran);\n\n    var newState = Object.assign({},this.state);\n    newState.buildMode = false;  // just build once \n    this.setState (newState);\n    return null;\n  };\n  // add commmand to a configuration, unless its null\n  addCommandKey(configs,configName,cmdKey) {\n    if (cmdKey == null) {\n      console.log(\"addCommandKey discarded for configFile: \" + configName);\n      return;\n    }\n    configs[configName].cmdKeys.push(cmdKey);\n  }\n  // build an ion command object\n  makeIonCommand(commands,clones,groupKey,configKey,configType,cmdName,values) {\n    // NOTE: the default behavior is to use the latest version of each command type\n    // By convention, the latest command is simply the configType + cmdName\n    // Prior command versions have _vxx suffix showing the last version supported\n    let cmdTypeKey = configType + \"_\" + cmdName;\n    let uniqid = this.props.getUniqId();\n    let cmdKey = \"cmd_\" + uniqid;\n    let cmdType = cmdTypes[cmdTypeKey];\n    console.log(\"makeIonCommand ... configType: \" + configType + \n                \" groupKey: \" + groupKey + \" cmdName: \" + cmdName +\n                \" cmdKey: \" + cmdKey + \" values: \" + values);\n    if (cmdType === null)\n      return null;\n    // check for duplicate command & exit if dup exists\n    for (var cKey in commands) {\n      let cmd = commands[cKey];\n      if (cmd.configKey === configKey) {     // matching config file?\n        if (cmd.typeKey === cmdTypeKey) {    // matching command type\n          var match = true;\n          for (let i = 0; i < cmd.values.length; i++) {\n            if (cmd.values[i] !== values[i])\n              match = false;\n          }\n          if (match) {\n            console.log(\"$$$$$$$ makeIonCommand duplicate command: \" + JSON.stringify(cmd));\n            return null;\n          }\n        } // end cmdTypeKey check\n      }   // end configKey check\n    }     // end commands loop\n    let now = new Date();\n    let tranTime = now.format(\"YYYY-MM-DDThh:mm\");\n    commands[cmdKey] = {\n      \"id\" : cmdKey,\n      \"configKey\" : configKey,\n      \"typeKey\" : cmdTypeKey,\n      \"typeName\" : cmdType.name,\n      \"order\" : cmdType.order,\n      \"lastUpdate\" : tranTime,\n      \"values\" : values\n    };\n    if (cmdType.isCloned) {\n      var cloneVal = this.props.makeCloneVal(groupKey,commands[cmdKey]);\n      var cvKey = cloneVal.id;\n      clones[cvKey] = cloneVal;\n    } \n    return cmdKey;\n  };\n  // build clone list for each new cloneVal  (a duplicate of the ionModelLoader function)\n  assignClones(commands,cloneValues) {\n    const findCloneVal = this.props.findCloneVal;\n\n    // identify commands dependent on cloneValues\n    // and push them on to the cloneValue list for update notifications\n    console.log(\"=== Identify clones using cloneValues from the network model.\");\n    for (var cmdKey in commands) {\n      let cmd = commands[cmdKey];\n      let cmdTypeKey = cmd.typeKey;\n      console.log(\"$$$ cmdKey: \" + cmdKey + \" has type: \" + cmdTypeKey);\n      let cmdType = cmdTypes[cmd.typeKey];\n      if(cmdType.copyClone  || cmdType.pickClone) {\n        for (let i = 0; i < cmdType.paramTypes.length; i++) {\n           let paramTypeKey = cmdType.paramTypes[i];\n           let paramType = paramTypes[paramTypeKey];\n           console.log(\"$$$ consider paramType \" + paramType.id + \" for cloning.\")\n           if (paramType.copyClone || paramType.pickClone) { \n              let val = cmd.values[i];\n              let type = paramType.valType;\n              console.log(\"$$$ seeking clone value for type: \" + type + \" with value of \" + val);\n              let cloneVal = findCloneVal(cloneValues,type,val);\n              if(cloneVal) {\n                console.log(\"=== building clone.\");\n                let clone = { \"cmdKey\" : cmdKey, \"valIdx\" : i };\n                console.log (\"$$$ created clone key: \" + JSON.stringify(clone));\n                cloneVal.clones.push(clone);\n              }\n           }\n        }\n      }\n    }\n  };\n  // get assigned ports of a host\n  getHostPorts (hostKey, hosts, ipaddrs, commands) {\n    var ports = [];\n    const hostObj = hosts[hostKey];\n    const ipAddrs = hostObj.ipAddrKeys;\n    for (var i=0; i<ipAddrs.length; i++) {\n      var ipAddrKey = ipAddrs[i];\n      var ipAddr = ipaddrs[ipAddrKey].ipAddr;\n      for (var cmdKey in commands) {\n        var cmdObj = commands[cmdKey];        \n        if  ( (cmdObj.typeKey.indexOf(\"induct\") >= 0\n           && cmdObj.typeKey.indexOf(\"ltp\") < 0 ) \n          || (cmdObj.typeKey.indexOf(\"start_udp\") >= 0) \n          || (cmdObj.typeKey.indexOf(\"start_dccp\") >= 0) ) {\n          //console.log( \"#### ipAddr: \" +ipAddr + \"  val[0]: \" + cmdObj.values[0]);\n          if ( cmdObj.values[0] === ipAddr)    // correct ipAddr?\n            ports.push(cmdObj.values[1]);\n        }\n      }\n    }\n    console.log(\"host: \" + hostKey + \" ports: \" + ports.toString() );\n    return ports;\n  } \n  // find an Induct cloneValue based on nodeKey & type (bpLayer)\n  getNodeInduct(cloneVals,nodeKey,bpLayer) {\n    var cloneType = bpLayer + \"Induct\";\n    for (var key in cloneVals) {\n      let cloneVal = cloneVals[key];\n      //console.log(\"$$$ checking cloneVal: \" + JSON.stringify(cloneVal));\n      if (cloneVal.type=== cloneType && cloneVal.nodeKey === nodeKey) {\n        return cloneVal;\n      }\n    }\n    console.log (\"!!! failed to get cloneVal for nodeKey: \" + nodeKey + \" cloneType: \" + cloneType);\n    return \"\";\n  }\n  // find a Link cloneValue based on nodeKey & type (ltpLayer)\n  getNodeLink(cloneVals,nodeKey,ltpLayer) {\n    var cloneType = ltpLayer + \"Link\";\n    for (var key in cloneVals) {\n      let cloneVal = cloneVals[key];\n      //console.log(\"$$$ checking cloneVal: \" + JSON.stringify(cloneVal));\n      if (cloneVal.type=== cloneType && cloneVal.nodeKey === nodeKey) {\n        return cloneVal;\n      }\n    }\n    console.log (\"!!! failed to get cloneVal for nodeKey: \" + nodeKey + \" cloneType: \" + cloneType);\n    return \"\";\n  }\n  // find an Outduct cloneValue based on nodeKey & toHostKey & type (bpLayer)\n  getNodeOutduct(cloneVals,nodeKey,toAddr,bpLayer) {\n    var cloneType = bpLayer + \"Outduct\";\n    console.log (\"!!! seeking cloneVal for nodeKey: \" + nodeKey \n                 + \" toAddr: \" + toAddr + \" cloneType: \" + cloneType) ;\n    for (var key in cloneVals) {\n      let cloneVal = cloneVals[key];\n      //console.log(\"$$$ checking cloneVal: \" + JSON.stringify(cloneVal));\n      if (cloneVal.type === cloneType && cloneVal.nodeKey === nodeKey) {\n        if (cloneVal.value.indexOf(toAddr) >= 0)\n          return cloneVal;\n      }\n    }\n    console.log (\"!!! failed to get cloneVal for nodeKey: \" + nodeKey \n                 + \" toAddr: \" + toAddr + \" cloneType: \" + cloneType) ;\n    return \"\";\n  }\n  makeNetHostOptions() {\n    const netHosts = this.props.netHosts;\n    console.log(\"makeNetHostOptions \" + JSON.stringify(netHosts));\n    let vals = [];\n    let noneVal = {\"value\" : '??', \"label\" : 'None selected'};\n    vals.push(noneVal);\n\n    for (var hostKey in netHosts) {\n      let value = hostKey;\n      let label = netHosts[hostKey].hostDesc;\n      vals.push({\"value\":  value, \"label\": label });\n    }\n    console.log(JSON.stringify(vals))\n    var optionItems = this.props.mapOptionElems(vals);\n    return optionItems;\n  }\n  makeNetNodeOptions() {\n    const netNodes = this.props.netNodes;\n    console.log(\"makeNetNodeOptions \" + JSON.stringify(netNodes));\n    let vals = [];\n    let noneVal = {\"value\" : '??', \"label\" : 'None selected'};\n    vals.push(noneVal);\n\n    for (var nodeKey in netNodes) {\n      let value = nodeKey;\n      let label = netNodes[nodeKey].nodeDesc;\n      vals.push({\"value\":  value, \"label\": label });\n    }\n    console.log(JSON.stringify(vals))\n    var optionItems = this.props.mapOptionElems(vals);\n    return optionItems;\n  }\n  makeAlertElem(msg) {\n    return (<Alert bsStyle=\"danger\"><b>ERROR: {msg}</b></Alert>);\n  };\n  makeHeadElem(cols) {\n    var colElems = cols.map(\n      (name,idx) => { return (<th key={idx}>{name}</th>); }\n    );\n    var headElem = <thead key=\"head\"><tr>{colElems}</tr></thead>;\n    return headElem;\n  };\n  makeRowElem(rowKey,data) {\n    var dataElems = data.map(\n      (name,idx) => { return (<td key={idx}>{name}</td>); }\n    );\n    var rowElem = <tr key={rowKey}>{dataElems}</tr>;\n    return rowElem;\n  };\n  makeNetHostListElem(name) {\n    console.log(\"makeNetHostListElem\");\n    const netHosts = this.props.netHosts;\n    const netAddrs = this.props.netAddrs;\n    const isGoodName = this.props.isGoodName;\n    const isGoodNetHostKey = this.props.isGoodNetHostKey;\n    const dispatch = this.props.dispatch;      // make sure dispatch remembers \"this\"\n\n    return (\n      <NetHostList\n        key=\"nethosts\"                 // unique id\n        name={name}                    // user model - defaults to model name\n        netHosts={netHosts}            // list of Net Hosts\n        netAddrs={netAddrs}            // list of Net IP Addrs\n\n        isGoodName={isGoodName}              // verify name string is valid\n        isGoodNetHostKey={isGoodNetHostKey}  // verify hostKey not in use\n        dispatch={dispatch}                  // dispatch func for new hosts\n      />\n    );\n  };\n  makeNetNodeListElem(name) {\n    console.log(\"makeNetNodeListElem\");\n    const netNodes = this.props.netNodes;\n    const isGoodName = this.props.isGoodName;\n    const isGoodNetNodeKey = this.props.isGoodNetNodeKey;\n    const makeOptions = this.props.makeTypeOptions;\n    const makeOptElems = this.props.makeOptionElems;\n    const makeNetHostOptions = this.makeNetHostOptions.bind(this);\n    const dispatch = this.props.dispatch;      // make sure dispatch remembers \"this\"\n\n    return (\n      <NetNodeList\n        key=\"netnodes\"                 // unique id\n        name={name}                    // user model - defaults to model name\n        netNodes={netNodes}            // list of Net Nodes\n\n        isGoodName={isGoodName}                   // verify name string is valid\n        isGoodNetNodeKey={isGoodNetNodeKey}       // verify hostKey not in use\n        makeTypeOptions={makeOptions} \n        makeOptionElems={makeOptElems}\n        makeNetHostOptions = {makeNetHostOptions} // mak otpions list of host keys\n        dispatch={dispatch}                       // dispatch func for new nodes\n      />\n    );\n  };\n  makeNetHopListElem(name) {\n    console.log(\"makeNetHopListElem\");\n    const netHops = this.props.netHops;\n    const isGoodName = this.props.isGoodName;\n    const isGoodNetHopKey = this.props.isGoodNetHopKey;\n    const makeOptions = this.props.makeTypeOptions;\n    const makeOptElems = this.props.makeOptionElems;\n    const makeNetNodeOptions = this.makeNetNodeOptions.bind(this);\n\n    const dispatch = this.props.dispatch;      // make sure dispatch remembers \"this\"\n\n    return (\n      <NetHopList\n        key=\"nethops\"                  // unique id\n        name={name}                    // user model - defaults to model name\n        netHops={netHops}              // list of Net Hops\n\n        isGoodName={isGoodName}              // verify name string is valid\n        isGoodNetHopKey={isGoodNetHopKey}    // verify hostKey not in use\n        makeTypeOptions={makeOptions} \n        makeOptionElems={makeOptElems}\n        makeNetNodeOptions = {makeNetNodeOptions} // make options list of node keys\n        dispatch={dispatch}                       // dispatch func for new hosts\n      />\n    );\n  };\n  makeNetEditor() {\n    //console.log(\">>makeModelElems \" + JSON.stringify(this.state));\n    var modelElems = [];\n    const icon = 'remove';\n    const head  = \n      <Row key=\"head\">\n        <Col sm={4}><Label bsSize=\"lg\" bsStyle=\"default\">Net Model Editor</Label></Col>\n        <Col sm={1}><Button bsSize=\"sm\" bsStyle=\"success\"  onClick={this.noedit}><Glyphicon glyph={icon} /></Button></Col>\n      </Row>;\n    modelElems.push(head);\n    const nameElem = this.makeModelElem(\"name\",\"text\",this.state.name,\"Net Model Name\",1,false,\"\");\n    modelElems.push(nameElem);\n    const descElem = this.makeModelElem(\"desc\",\"text\",this.state.desc,\"Description\",2,false,\"\");\n    modelElems.push(descElem);\n\n    return (\n      <div>\n        {modelElems}\n      </div>\n    );\n  };\n  makeNetViewer() {\n    //console.log(\">>makeModelElems \" + JSON.stringify(this.state));\n    var modelElems = [];\n    const head  = <Row key=\"head\"><Col sm={2}> <Label bsSize=\"lg\" bsStyle=\"default\">Network Model Viewer</Label></Col></Row>;\n    modelElems.push(head);\n    const nameElem = this.makeModelElem(\"name\",\"text\",this.state.name,\"Network Model Name\",1,true,\"\");\n    modelElems.push(nameElem);\n    const descElem = this.makeModelElem(\"desc\",\"text\",this.state.desc,\"Description\",2,true,\"\");\n    modelElems.push(descElem);\n\n    return (\n      <div>\n        {modelElems}\n      </div>\n    );\n  };\n  makeModelElem(prop,type,val,label,size,read,note) {\n    //console.log(\">>MakeModelElem \" + prop + ' ' + type + ' ' + val + ' ' + size);\n    const form =\n        <FormControl readOnly={read} bsSize=\"sm\" type={type} value={val} onChange={this.handleNetChange.bind(null,prop)} />;\n    return (\n      <Row key={label}>\n        <Col className=\"text-right\" sm={2}><b>{label}</b></Col>\n        <Col sm={size} value={val}>{form}</Col>\n        <Col sm={2} value={2}>{note}</Col>\n      </Row>\n    );\n  };\n\n  render() {\n    //console.log(\"NetModel render begin. state\" +JSON.stringify(this.state));\n    console.log(\"NetModel render begin.\");\n    // check for alert\n    let msg = this.state.errMsg;\n    console.log(\"** errMsg =\" + msg);\n    var alert = (msg === \"\")?  \"\" : this.makeAlertElem(msg);\n\n    const name       = this.props.name;\n    const editMode   = this.state.editMode;\n    const viewMode   = this.state.viewMode;\n    const expandMode = this.state.expandMode;\n    const buildMode  = this.state.buildMode;\n\n    const editLabel  = editMode?   'Submit' : 'Edit';\n    const viewLabel  = viewMode?   'Hide' : 'Show';\n    const expandIcon = expandMode? 'chevron-down' : 'chevron-right';\n\n    const dimBuildIon = buildMode?  false : true;\n    const dimSaveNet  = false;\n\n    const hostList  = expandMode? this.makeNetHostListElem(name) : \"\";\n    const nodeList  = expandMode? this.makeNetNodeListElem(name) : \"\";\n    const hopList   = expandMode? this.makeNetHopListElem(name)  : \"\";\n\n    let viewPanel = null;\n    if (viewMode)\n      if (editMode)\n        viewPanel = this.makeNetEditor();\n      else\n        viewPanel = this.makeNetViewer();\n\n    console.log(\"NetModel render return next.\")\n    return (\n      <div>\n        <Row>\n          <hr/>\n          <Col className=\"text-left\"  sm={1}><Label bsSize=\"sm\" bsStyle=\"default\">Net Model</Label></Col>\n          <Col className=\"text-right\" sm={1}><b>{this.state.name}</b></Col>\n          <Col className=\"text-left\"  sm={2}>{this.state.desc}</Col>\n          <Col sm={6}> \n            <ButtonToolbar>\n              <Button bsSize=\"sm\" bsStyle=\"primary\" onClick={this.edit}>{editLabel}</Button>\n              <Button bsSize=\"sm\" bsStyle=\"info\" onClick={this.view}>{viewLabel}</Button>\n              <Button bsSize=\"sm\" bsStyle=\"primary\" disabled={dimBuildIon} onClick={this.makeIonModel.bind(this)}>Build ION Model</Button>\n              <Button bsSize=\"sm\" bsStyle=\"primary\" disabled={dimSaveNet}  onClick={this.saveModel}>Save Model</Button>\n              <Button bsSize=\"sm\" bsStyle=\"success\" onClick={this.expand}><Glyphicon glyph={expandIcon}/>{' '}</Button>\n            </ButtonToolbar>\n          </Col>\n          <Col sm={4}>{alert}</Col>\n        </Row>\n        <Panel collapsible expanded={viewMode}>\n          {viewPanel}\n        </Panel>\n        <Panel  collapsible expanded={expandMode}>\n          {hostList}\n          {nodeList}\n          {hopList}\n        </Panel>\n      </div>\n    );\n  };\n  \n  expand = () => { // activated by expand/contract shutter icon\n    var newState = Object.assign({},this.state);\n    var expandMode = this.state.expandMode;\n    if (expandMode)\n      console.log(\"let's close-up network model list!\");\n    else\n      console.log(\"let's expand network mode list!\");\n    newState.expandMode = !expandMode;  // toggling flag changes render\n    this.setState (newState);\n  };\n  edit = () => {   // activated by Edit/Submit button\n    var newState = Object.assign({},this.state);\n    const editMode = this.state.editMode;\n    if (editMode)\n      this.submit();\n    else {\n      console.log(\"let's edit!\");\n      newState.viewMode = true;   // force viewing\n    }\n    newState.editMode = !editMode;  // toggle mode\n    this.setState (newState);\n  };\n  noedit = () => {   // activated by Edit/Submit button\n    var newState = Object.assign({},this.state);\n    newState.editMode = false;   // cancel editing\n    newState.viewMode = false;   // cancel viewing\n    this.setState (newState);\n  };\n  submit = () => {    // callable by edit (above)\n    console.log(\"submit net model updates!\" + JSON.stringify(this.state.desc));\n    var netModel = { \n      \"name\": this.state.name,\n      \"desc\": this.state.desc,\n    };\n    var tran = {\n      action: \"UPDATE-NET-MODEL\",\n      netModel: netModel\n    };\n    this.props.dispatch(tran);\n  };\n  view = () => { // activated by view/hide button\n    var newState = Object.assign({},this.state);\n    var viewMode = this.state.viewMode;\n    if (viewMode)\n      console.log(\"let's hide view panel!\");\n    else\n      console.log(\"let's show view panel!\");\n    newState.viewMode = !viewMode;\n    this.setState (newState);\n  };\n  saveModel = () => {\n    console.log(\"save Net model!\");\n    const modelObj = this.makeModelObj();\n    const modelJson = JSON.stringify(modelObj,null,2);\n    const blob = new Blob( [modelJson], {type: \"text/plain; charset=utf-8\"} );\n    const modelName = this.state.name + \".json\";\n    console.log(\"save Net model to: \" + modelName);\n    saveAs(blob, modelName, true);   // true = disable autoBOM\n  };\n  handleNetChange = (prop,e) => {\n    console.log(\"a value change of \" + prop +  e);\n    var newState = Object.assign({},this.state);\n    console.log(\">>> param old value = \" + newState[prop]);\n    newState[prop] = e.target.value;\n    this.setState (newState);\n    e.preventDefault();\n  };\n}\n\nNetModel.propTypes = {\n  name: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n\n  netHosts: PropTypes.Arrays.isRequired,\n  netNodes: PropTypes.Arrays.isRequired,\n  netHops: PropTypes.Arrays.isRequired,\n  netAddrs: PropTypes.Arrays.isRequired,\n\n  getIonModel: PropTypes.func.isRequired,      // func to get ion model handle\n  isGoodName: PropTypes.func.isRequired,       // func to validate name\n  isGoodNetHostKey: PropTypes.func.isRequired, // func to validate hostKey not in use\n  isGoodNetNodeKey: PropTypes.func.isRequired, // func to validate nodeKey not in use\n  isGoodNetHopKey: PropTypes.func.isRequired,  // func to validate hopKey not in use\n  makeTypeOptions: PropTypes.func.isRequired,  // func to get dynamic (cloned) options\n  makeOptionElems: PropTypes.func.isRequired,  // func to get static options\n  mapOptionElems: PropTypes.func.isRequired,   // func map option elems\n  getUniqId: PropTypes.func.isRequired,        // func to make a uniq id\n  makeCloneVal: PropTypes.func.isRequired,     // func to make a cloneVal\n  findCloneVal: PropTypes.func.isRequired,     // func to find a cloneVal\n  isStandardProtocol:  PropTypes.func.isRequired,  // func to check protocol type\n\n  //checkModel: PropTypes.func.isRequired,    // func to check the entire model\n  dispatch: PropTypes.func.isRequired,        // func to handle transactions centrally\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}