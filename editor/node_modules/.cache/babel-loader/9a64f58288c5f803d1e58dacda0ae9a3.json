{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n'use strict';\n\nvar keyOf = require('fbjs/lib/keyOf');\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\n\n\nvar DefaultEventPluginOrder = [keyOf({\n  ResponderEventPlugin: null\n}), keyOf({\n  SimpleEventPlugin: null\n}), keyOf({\n  TapEventPlugin: null\n}), keyOf({\n  EnterLeaveEventPlugin: null\n}), keyOf({\n  ChangeEventPlugin: null\n}), keyOf({\n  SelectEventPlugin: null\n}), keyOf({\n  BeforeInputEventPlugin: null\n})];\nmodule.exports = DefaultEventPluginOrder;","map":{"version":3,"names":["keyOf","require","DefaultEventPluginOrder","ResponderEventPlugin","SimpleEventPlugin","TapEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","module","exports"],"sources":["/Users/rlborgen/git/ionconfig/editor/node_modules/react-popout/node_modules/react/lib/DefaultEventPluginOrder.js"],"sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require('fbjs/lib/keyOf');\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\n\nmodule.exports = DefaultEventPluginOrder;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,uBAAuB,GAAG,CAACF,KAAK,CAAC;EAAEG,oBAAoB,EAAE;AAAxB,CAAD,CAAN,EAAwCH,KAAK,CAAC;EAAEI,iBAAiB,EAAE;AAArB,CAAD,CAA7C,EAA4EJ,KAAK,CAAC;EAAEK,cAAc,EAAE;AAAlB,CAAD,CAAjF,EAA6GL,KAAK,CAAC;EAAEM,qBAAqB,EAAE;AAAzB,CAAD,CAAlH,EAAqJN,KAAK,CAAC;EAAEO,iBAAiB,EAAE;AAArB,CAAD,CAA1J,EAAyLP,KAAK,CAAC;EAAEQ,iBAAiB,EAAE;AAArB,CAAD,CAA9L,EAA6NR,KAAK,CAAC;EAAES,sBAAsB,EAAE;AAA1B,CAAD,CAAlO,CAA9B;AAEAC,MAAM,CAACC,OAAP,GAAiBT,uBAAjB"},"metadata":{},"sourceType":"script"}